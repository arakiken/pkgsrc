diff -rNu configure configure
--- configure	2014-09-19 10:56:20.000000000 +0900
+++ configure	2014-09-19 11:03:17.000000000 +0900
@@ -707,6 +707,8 @@
 BUILD_KDRIVEFBDEVLIB_TRUE
 XEPHYR_FALSE
 XEPHYR_TRUE
+XSIXELSERVER_FALSE
+XSIXELSERVER_TRUE
 KDRIVEFBDEV_FALSE
 KDRIVEFBDEV_TRUE
 TSLIB_FALSE
@@ -725,9 +727,13 @@
 KDRIVE_CFLAGS
 KDRIVE_PURE_INCS
 KDRIVE_INCS
+XSIXEL_INCS
+XSIXEL_LIBS
 XEPHYR_INCS
 XEPHYR_LIBS
 XEPHYR_CFLAGS
+SIXEL_LIBS
+SIXEL_CFLAGS
 TSLIB_LIBS
 TSLIB_CFLAGS
 KDRIVE_FALSE
@@ -1335,6 +1341,7 @@
 enable_xwin
 enable_kdrive
 enable_xephyr
+enable_xsixel
 enable_xfake
 enable_xfbdev
 enable_kdrive_kbd
@@ -1438,6 +1445,8 @@
 X11EXAMPLES_DEP_LIBS
 TSLIB_CFLAGS
 TSLIB_LIBS
+SIXEL_CFLAGS
+SIXEL_LIBS
 XEPHYR_CFLAGS
 XEPHYR_LIBS'
 
@@ -2145,6 +2154,7 @@
   --enable-xwin           Build XWin server (default: auto)
   --enable-kdrive         Build kdrive servers (default: no)
   --enable-xephyr         Build the kdrive Xephyr server (default: auto)
+  --enable-xsixel         Build the kdrive Xsixel server (default: auto)
   --enable-xfake          Build the kdrive 'fake' server (default: auto)
   --enable-xfbdev         Build the kdrive framebuffer device server (default:
                           auto)
@@ -2387,6 +2397,9 @@
   TSLIB_CFLAGS
               C compiler flags for TSLIB, overriding pkg-config
   TSLIB_LIBS  linker flags for TSLIB, overriding pkg-config
+  SIXEL_CFLAGS
+              C compiler flags for SIXEL, overriding pkg-config
+  SIXEL_LIBS  linker flags for SIXEL, overriding pkg-config
   XEPHYR_CFLAGS
               C compiler flags for XEPHYR, overriding pkg-config
   XEPHYR_LIBS linker flags for XEPHYR, overriding pkg-config
@@ -23394,6 +23407,13 @@
   XEPHYR=auto
 fi
 
+# Check whether --enable-xsixel was given.
+if test "${enable_xsixel+set}" = set; then :
+  enableval=$enable_xsixel; XSIXEL=$enableval
+else
+  XSIXEL=auto
+fi
+
 # Check whether --enable-xfake was given.
 if test "${enable_xfake+set}" = set; then :
   enableval=$enable_xfake; XFAKE=$enableval
@@ -24184,7 +24204,7 @@
 # Make SDK_REQUIRED_MODULES available for inclusion in xorg-server.pc
 
 
-REQUIRED_MODULES="$FIXESPROTO $DAMAGEPROTO $XCMISCPROTO $XTRANS $BIGREQSPROTO $SDK_REQUIRED_MODULES"
+REQUIRED_MODULES="$FIXESPROTO $DAMAGEPROTO $XCMISCPROTO $BIGREQSPROTO $SDK_REQUIRED_MODULES"
 
 if test "x$CONFIG_UDEV" = xyes &&
  { test "x$CONFIG_DBUS_API" = xyes || test "x$CONFIG_HAL" = xyes; }; then
@@ -29742,6 +29762,9 @@
 
 XEPHYR_LIBS=
 XEPHYR_INCS=
+XSIXEL_LIBS=
+XSIXEL_INCS=
+XSIXEL_DIRS=
 
  if test x$KDRIVE = xyes; then
   KDRIVE_TRUE=
@@ -29931,6 +29954,121 @@
 
     fi
 
+    for ac_header in sixel.h
+do :
+  ac_fn_c_check_header_mongrel "$LINENO" "sixel.h" "ac_cv_header_sixel_h" "$ac_includes_default"
+if test "x$ac_cv_header_sixel_h" = xyes; then :
+  cat >>confdefs.h <<_ACEOF
+#define HAVE_SIXEL_H 1
+_ACEOF
+
+fi
+
+done
+
+    if test x"$ac_cv_header_sixel_h" = xyes && test "x$XSIXEL" = xauto; then
+       XSIXEL=yes
+    fi
+
+    if test x"$XSIXEL" = xyes; then
+
+$as_echo "#define XSIXELSERVER 1" >>confdefs.h
+
+
+pkg_failed=no
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for SIXEL" >&5
+$as_echo_n "checking for SIXEL... " >&6; }
+
+if test -n "$SIXEL_CFLAGS"; then
+    pkg_cv_SIXEL_CFLAGS="$SIXEL_CFLAGS"
+ elif test -n "$PKG_CONFIG"; then
+    if test -n "$PKG_CONFIG" && \
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libsixel\""; } >&5
+  ($PKG_CONFIG --exists --print-errors "libsixel") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then
+  pkg_cv_SIXEL_CFLAGS=`$PKG_CONFIG --cflags "libsixel" 2>/dev/null`
+		      test "x$?" != "x0" && pkg_failed=yes
+else
+  pkg_failed=yes
+fi
+ else
+    pkg_failed=untried
+fi
+if test -n "$SIXEL_LIBS"; then
+    pkg_cv_SIXEL_LIBS="$SIXEL_LIBS"
+ elif test -n "$PKG_CONFIG"; then
+    if test -n "$PKG_CONFIG" && \
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libsixel\""; } >&5
+  ($PKG_CONFIG --exists --print-errors "libsixel") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then
+  pkg_cv_SIXEL_LIBS=`$PKG_CONFIG --libs "libsixel" 2>/dev/null`
+		      test "x$?" != "x0" && pkg_failed=yes
+else
+  pkg_failed=yes
+fi
+ else
+    pkg_failed=untried
+fi
+
+
+
+if test $pkg_failed = yes; then
+   	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+
+if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
+        _pkg_short_errors_supported=yes
+else
+        _pkg_short_errors_supported=no
+fi
+        if test $_pkg_short_errors_supported = yes; then
+	        SIXEL_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "libsixel" 2>&1`
+        else
+	        SIXEL_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "libsixel" 2>&1`
+        fi
+	# Put the nasty error message in config.log where it belongs
+	echo "$SIXEL_PKG_ERRORS" >&5
+
+	as_fn_error $? "Package requirements (libsixel) were not met:
+
+$SIXEL_PKG_ERRORS
+
+Consider adjusting the PKG_CONFIG_PATH environment variable if you
+installed software in a non-standard prefix.
+
+Alternatively, you may set the environment variables SIXEL_CFLAGS
+and SIXEL_LIBS to avoid the need to call pkg-config.
+See the pkg-config man page for more details." "$LINENO" 5
+elif test $pkg_failed = untried; then
+     	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+	{ { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error $? "The pkg-config script could not be found or is too old.  Make sure it
+is in your PATH or set the PKG_CONFIG environment variable to the full
+path to pkg-config.
+
+Alternatively, you may set the environment variables SIXEL_CFLAGS
+and SIXEL_LIBS to avoid the need to call pkg-config.
+See the pkg-config man page for more details.
+
+To get pkg-config, see <http://pkg-config.freedesktop.org/>.
+See \`config.log' for more details" "$LINENO" 5; }
+else
+	SIXEL_CFLAGS=$pkg_cv_SIXEL_CFLAGS
+	SIXEL_LIBS=$pkg_cv_SIXEL_LIBS
+        { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+
+fi
+       XSIXEL_LIBS="${SIXEL_LIBS}"
+       XSIXEL_INCS="${SIXEL_CFLAGS} ${XSERVER_CFLAGS}"
+    fi
+
     XEPHYR_REQUIRED_LIBS="x11 $LIBXEXT xau xdmcp"
     if test "x$XV" = xyes; then
         XEPHYR_REQUIRED_LIBS="$XEPHYR_REQUIRED_LIBS xv"
@@ -30197,6 +30335,8 @@
 
 
 
+
+
 fi
 
 
@@ -30252,6 +30392,14 @@
   KDRIVEFBDEV_FALSE=
 fi
 
+ if test "x$XSIXEL" = xyes; then
+  XSIXELSERVER_TRUE=
+  XSIXELSERVER_FALSE='#'
+else
+  XSIXELSERVER_TRUE='#'
+  XSIXELSERVER_FALSE=
+fi
+
  if test "x$KDRIVE" = xyes && test "x$XEPHYR" = xyes; then
   XEPHYR_TRUE=
   XEPHYR_FALSE='#'
@@ -30336,7 +30484,7 @@
 ac_config_commands="$ac_config_commands sdksyms"
 
 
-ac_config_files="$ac_config_files Makefile glx/Makefile include/Makefile composite/Makefile damageext/Makefile dbe/Makefile dix/Makefile doc/Makefile doc/dtrace/Makefile man/Makefile fb/Makefile record/Makefile config/Makefile mi/Makefile miext/Makefile miext/sync/Makefile miext/damage/Makefile miext/shadow/Makefile miext/cw/Makefile miext/rootless/Makefile os/Makefile randr/Makefile render/Makefile xkb/Makefile Xext/Makefile Xi/Makefile xfixes/Makefile exa/Makefile hw/Makefile hw/xfree86/Makefile hw/xfree86/common/Makefile hw/xfree86/common/xf86Build.h hw/xfree86/ddc/Makefile hw/xfree86/dixmods/Makefile hw/xfree86/dixmods/extmod/Makefile hw/xfree86/doc/Makefile hw/xfree86/dri/Makefile hw/xfree86/dri2/Makefile hw/xfree86/exa/Makefile hw/xfree86/exa/man/Makefile hw/xfree86/fbdevhw/Makefile hw/xfree86/fbdevhw/man/Makefile hw/xfree86/i2c/Makefile hw/xfree86/int10/Makefile hw/xfree86/loader/Makefile hw/xfree86/man/Makefile hw/xfree86/modes/Makefile hw/xfree86/os-support/Makefile hw/xfree86/os-support/bsd/Makefile hw/xfree86/os-support/bus/Makefile hw/xfree86/os-support/hurd/Makefile hw/xfree86/os-support/misc/Makefile hw/xfree86/os-support/linux/Makefile hw/xfree86/os-support/solaris/Makefile hw/xfree86/os-support/stub/Makefile hw/xfree86/parser/Makefile hw/xfree86/ramdac/Makefile hw/xfree86/shadowfb/Makefile hw/xfree86/vbe/Makefile hw/xfree86/vgahw/Makefile hw/xfree86/x86emu/Makefile hw/xfree86/xaa/Makefile hw/xfree86/utils/Makefile hw/xfree86/utils/man/Makefile hw/xfree86/utils/cvt/Makefile hw/xfree86/utils/gtf/Makefile hw/dmx/config/Makefile hw/dmx/config/man/Makefile hw/dmx/doc/Makefile hw/dmx/doxygen/doxygen.conf hw/dmx/doxygen/Makefile hw/dmx/examples/Makefile hw/dmx/input/Makefile hw/dmx/glxProxy/Makefile hw/dmx/Makefile hw/dmx/man/Makefile hw/vfb/Makefile hw/vfb/man/Makefile hw/xnest/Makefile hw/xnest/man/Makefile hw/xwin/Makefile hw/xwin/glx/Makefile hw/xwin/man/Makefile hw/xquartz/Makefile hw/xquartz/GL/Makefile hw/xquartz/bundle/Makefile hw/xquartz/man/Makefile hw/xquartz/mach-startup/Makefile hw/xquartz/pbproxy/Makefile hw/xquartz/xpr/Makefile hw/kdrive/Makefile hw/kdrive/ephyr/Makefile hw/kdrive/ephyr/man/Makefile hw/kdrive/fake/Makefile hw/kdrive/fbdev/Makefile hw/kdrive/linux/Makefile hw/kdrive/src/Makefile test/Makefile test/xi2/Makefile xserver.ent xorg-server.pc"
+ac_config_files="$ac_config_files Makefile glx/Makefile include/Makefile composite/Makefile damageext/Makefile dbe/Makefile dix/Makefile doc/Makefile doc/dtrace/Makefile man/Makefile fb/Makefile record/Makefile config/Makefile mi/Makefile miext/Makefile miext/sync/Makefile miext/damage/Makefile miext/shadow/Makefile miext/cw/Makefile miext/rootless/Makefile os/Makefile randr/Makefile render/Makefile xkb/Makefile Xext/Makefile Xi/Makefile xfixes/Makefile exa/Makefile hw/Makefile hw/xfree86/Makefile hw/xfree86/common/Makefile hw/xfree86/common/xf86Build.h hw/xfree86/ddc/Makefile hw/xfree86/dixmods/Makefile hw/xfree86/dixmods/extmod/Makefile hw/xfree86/doc/Makefile hw/xfree86/dri/Makefile hw/xfree86/dri2/Makefile hw/xfree86/exa/Makefile hw/xfree86/exa/man/Makefile hw/xfree86/fbdevhw/Makefile hw/xfree86/fbdevhw/man/Makefile hw/xfree86/i2c/Makefile hw/xfree86/int10/Makefile hw/xfree86/loader/Makefile hw/xfree86/man/Makefile hw/xfree86/modes/Makefile hw/xfree86/os-support/Makefile hw/xfree86/os-support/bsd/Makefile hw/xfree86/os-support/bus/Makefile hw/xfree86/os-support/hurd/Makefile hw/xfree86/os-support/misc/Makefile hw/xfree86/os-support/linux/Makefile hw/xfree86/os-support/solaris/Makefile hw/xfree86/os-support/stub/Makefile hw/xfree86/parser/Makefile hw/xfree86/ramdac/Makefile hw/xfree86/shadowfb/Makefile hw/xfree86/vbe/Makefile hw/xfree86/vgahw/Makefile hw/xfree86/x86emu/Makefile hw/xfree86/xaa/Makefile hw/xfree86/utils/Makefile hw/xfree86/utils/man/Makefile hw/xfree86/utils/cvt/Makefile hw/xfree86/utils/gtf/Makefile hw/dmx/config/Makefile hw/dmx/config/man/Makefile hw/dmx/doc/Makefile hw/dmx/doxygen/doxygen.conf hw/dmx/doxygen/Makefile hw/dmx/examples/Makefile hw/dmx/input/Makefile hw/dmx/glxProxy/Makefile hw/dmx/Makefile hw/dmx/man/Makefile hw/vfb/Makefile hw/vfb/man/Makefile hw/xnest/Makefile hw/xnest/man/Makefile hw/xwin/Makefile hw/xwin/glx/Makefile hw/xwin/man/Makefile hw/xquartz/Makefile hw/xquartz/GL/Makefile hw/xquartz/bundle/Makefile hw/xquartz/man/Makefile hw/xquartz/mach-startup/Makefile hw/xquartz/pbproxy/Makefile hw/xquartz/xpr/Makefile hw/kdrive/Makefile hw/kdrive/ephyr/Makefile hw/kdrive/ephyr/man/Makefile hw/kdrive/sixel/Makefile hw/kdrive/fake/Makefile hw/kdrive/fbdev/Makefile hw/kdrive/linux/Makefile hw/kdrive/src/Makefile test/Makefile test/xi2/Makefile xserver.ent xorg-server.pc"
 
 cat >confcache <<\_ACEOF
 # This file is a shell script that caches the results of configure
@@ -30876,6 +31024,10 @@
   as_fn_error $? "conditional \"KDRIVEFBDEV\" was never defined.
 Usually this means the macro was only invoked conditionally." "$LINENO" 5
 fi
+if test -z "${XSIXELSERVER_TRUE}" && test -z "${XSIXELSERVER_FALSE}"; then
+  as_fn_error $? "conditional \"XSIXELSERVER\" was never defined.
+Usually this means the macro was only invoked conditionally." "$LINENO" 5
+fi
 if test -z "${XEPHYR_TRUE}" && test -z "${XEPHYR_FALSE}"; then
   as_fn_error $? "conditional \"XEPHYR\" was never defined.
 Usually this means the macro was only invoked conditionally." "$LINENO" 5
@@ -31863,6 +32015,7 @@
     "hw/kdrive/Makefile") CONFIG_FILES="$CONFIG_FILES hw/kdrive/Makefile" ;;
     "hw/kdrive/ephyr/Makefile") CONFIG_FILES="$CONFIG_FILES hw/kdrive/ephyr/Makefile" ;;
     "hw/kdrive/ephyr/man/Makefile") CONFIG_FILES="$CONFIG_FILES hw/kdrive/ephyr/man/Makefile" ;;
+    "hw/kdrive/sixel/Makefile") CONFIG_FILES="$CONFIG_FILES hw/kdrive/sixel/Makefile" ;;
     "hw/kdrive/fake/Makefile") CONFIG_FILES="$CONFIG_FILES hw/kdrive/fake/Makefile" ;;
     "hw/kdrive/fbdev/Makefile") CONFIG_FILES="$CONFIG_FILES hw/kdrive/fbdev/Makefile" ;;
     "hw/kdrive/linux/Makefile") CONFIG_FILES="$CONFIG_FILES hw/kdrive/linux/Makefile" ;;
diff -rNu configure.ac configure.ac
--- configure.ac	2012-08-27 14:10:47.000000000 +0900
+++ configure.ac	2014-09-19 11:02:01.000000000 +0900
@@ -638,6 +638,7 @@
 dnl kdrive and its subsystems
 AC_ARG_ENABLE(kdrive,         AS_HELP_STRING([--enable-kdrive], [Build kdrive servers (default: no)]), [KDRIVE=$enableval], [KDRIVE=no])
 AC_ARG_ENABLE(xephyr,         AS_HELP_STRING([--enable-xephyr], [Build the kdrive Xephyr server (default: auto)]), [XEPHYR=$enableval], [XEPHYR=auto])
+AC_ARG_ENABLE(xsixel,         AS_HELP_STRING([--enable-xsixel], [Build the kdrive Xsixel server (default: auto)]), [XSIXEL=$enableval], [XSIXEL=auto])
 AC_ARG_ENABLE(xfake,          AS_HELP_STRING([--enable-xfake], [Build the kdrive 'fake' server (default: auto)]), [XFAKE=$enableval], [XFAKE=auto])
 AC_ARG_ENABLE(xfbdev,         AS_HELP_STRING([--enable-xfbdev], [Build the kdrive framebuffer device server (default: auto)]), [XFBDEV=$enableval], [XFBDEV=auto])
 dnl kdrive options
@@ -811,7 +812,7 @@
 # Make SDK_REQUIRED_MODULES available for inclusion in xorg-server.pc
 AC_SUBST(SDK_REQUIRED_MODULES)
 
-REQUIRED_MODULES="$FIXESPROTO $DAMAGEPROTO $XCMISCPROTO $XTRANS $BIGREQSPROTO $SDK_REQUIRED_MODULES"
+REQUIRED_MODULES="$FIXESPROTO $DAMAGEPROTO $XCMISCPROTO $BIGREQSPROTO $SDK_REQUIRED_MODULES"
 
 if test "x$CONFIG_UDEV" = xyes &&
  { test "x$CONFIG_DBUS_API" = xyes || test "x$CONFIG_HAL" = xyes; }; then
@@ -1971,6 +1972,9 @@
 
 XEPHYR_LIBS=
 XEPHYR_INCS=
+XSIXEL_LIBS=
+XSIXEL_INCS=
+XSIXEL_DIRS=
 
 AM_CONDITIONAL(KDRIVE, [test x$KDRIVE = xyes])
 
@@ -2019,6 +2023,18 @@
        AC_DEFINE(KDRIVE_MOUSE, 1, [Enable KDrive mouse driver])
     fi
 
+    AC_CHECK_HEADERS([sixel.h])
+    if test x"$ac_cv_header_sixel_h" = xyes && test "x$XSIXEL" = xauto; then
+       XSIXEL=yes
+    fi
+
+    if test x"$XSIXEL" = xyes; then
+       AC_DEFINE(XSIXELSERVER, 1, [Build Xsixel server])
+       PKG_CHECK_MODULES([SIXEL], [libsixel])
+       XSIXEL_LIBS="${SIXEL_LIBS}"
+       XSIXEL_INCS="${SIXEL_CFLAGS} ${XSERVER_CFLAGS}"
+    fi
+
     XEPHYR_REQUIRED_LIBS="x11 $LIBXEXT xau xdmcp"
     if test "x$XV" = xyes; then
         XEPHYR_REQUIRED_LIBS="$XEPHYR_REQUIRED_LIBS xv"
@@ -2081,6 +2097,8 @@
 
     AC_SUBST([XEPHYR_LIBS])
     AC_SUBST([XEPHYR_INCS])
+    AC_SUBST([XSIXEL_LIBS])
+    AC_SUBST([XSIXEL_INCS])
 fi
 AC_SUBST([KDRIVE_INCS])
 AC_SUBST([KDRIVE_PURE_INCS])
@@ -2094,6 +2112,7 @@
 AM_CONDITIONAL(KDRIVE_MOUSE, [test "x$KDRIVE_MOUSE" = xyes])
 AM_CONDITIONAL(TSLIB, [test "x$HAVE_TSLIB" = xyes])
 AM_CONDITIONAL(KDRIVEFBDEV, [test "x$XFBDEV" = xyes])
+AM_CONDITIONAL(XSIXELSERVER, [test "x$XSIXEL" = xyes])
 AM_CONDITIONAL(XEPHYR, [test "x$KDRIVE" = xyes && test "x$XEPHYR" = xyes])
 AM_CONDITIONAL(BUILD_KDRIVEFBDEVLIB, [test "x$KDRIVE" = xyes && test "x$KDRIVEFBDEVLIB" = xyes])
 AM_CONDITIONAL(XFAKESERVER, [test "x$KDRIVE" = xyes && test "x$XFAKE" = xyes])
@@ -2224,6 +2243,7 @@
 hw/kdrive/Makefile
 hw/kdrive/ephyr/Makefile
 hw/kdrive/ephyr/man/Makefile
+hw/kdrive/sixel/Makefile
 hw/kdrive/fake/Makefile
 hw/kdrive/fbdev/Makefile
 hw/kdrive/linux/Makefile
diff -rNu dix/main.c dix/main.c
--- dix/main.c	2012-08-20 00:51:24.000000000 +0900
+++ dix/main.c	2014-09-19 11:01:10.000000000 +0900
@@ -352,6 +352,8 @@
 
         free(ConnectionInfo);
         ConnectionInfo = NULL;
+        ddxGiveUp(EXIT_NO_ERROR);
+        break;
     }
     return 0;
 }
diff -rNu hw/kdrive/Makefile.am hw/kdrive/Makefile.am
--- hw/kdrive/Makefile.am	2012-05-18 02:09:03.000000000 +0900
+++ hw/kdrive/Makefile.am	2014-09-19 11:01:10.000000000 +0900
@@ -6,6 +6,10 @@
 XFAKE_SUBDIRS = fake
 endif
 
+if XSIXELSERVER
+XSIXEL_SUBDIRS = sixel
+endif
+
 if XEPHYR
 XEPHYR_SUBDIRS = ephyr
 endif
@@ -15,6 +19,7 @@
 endif
 
 SERVER_SUBDIRS = 		\
+	$(XSIXEL_SUBDIRS)		\
 	$(FBDEV_SUBDIRS)	\
 	$(XEPHYR_SUBDIRS)       \
 	$(XFAKE_SUBDIRS)
@@ -24,7 +29,7 @@
 	$(LINUX_SUBDIRS)	\
 	$(SERVER_SUBDIRS)
 
-DIST_SUBDIRS = fbdev ephyr src linux fake
+DIST_SUBDIRS = fbdev sixel ephyr src linux fake
 
 relink:
 	$(AM_V_at)for i in $(SERVER_SUBDIRS) ; do $(MAKE) -C $$i relink || exit 1 ; done
diff -rNu hw/kdrive/Makefile.in hw/kdrive/Makefile.in
--- hw/kdrive/Makefile.in	2014-09-19 10:56:54.000000000 +0900
+++ hw/kdrive/Makefile.in	2014-09-19 11:03:49.000000000 +0900
@@ -354,6 +354,8 @@
 SHA1_CFLAGS = @SHA1_CFLAGS@
 SHA1_LIBS = @SHA1_LIBS@
 SHELL = @SHELL@
+SIXEL_CFLAGS = @SIXEL_CFLAGS@
+SIXEL_LIBS = @SIXEL_LIBS@
 SOLARIS_ASM_CFLAGS = @SOLARIS_ASM_CFLAGS@
 SOLARIS_INOUT_ARCH = @SOLARIS_INOUT_ARCH@
 STRICT_CFLAGS = @STRICT_CFLAGS@
@@ -424,6 +426,8 @@
 XSERVERLIBS_LIBS = @XSERVERLIBS_LIBS@
 XSERVER_LIBS = @XSERVER_LIBS@
 XSERVER_SYS_LIBS = @XSERVER_SYS_LIBS@
+XSIXEL_INCS = @XSIXEL_INCS@
+XSIXEL_LIBS = @XSIXEL_LIBS@
 XSLTPROC = @XSLTPROC@
 XSL_STYLESHEET = @XSL_STYLESHEET@
 XTSTEXAMPLES_DEP_CFLAGS = @XTSTEXAMPLES_DEP_CFLAGS@
@@ -504,9 +508,11 @@
 top_srcdir = @top_srcdir@
 @BUILD_KDRIVEFBDEVLIB_TRUE@FBDEV_SUBDIRS = fbdev
 @XFAKESERVER_TRUE@XFAKE_SUBDIRS = fake
+@XSIXELSERVER_TRUE@XSIXEL_SUBDIRS = sixel
 @XEPHYR_TRUE@XEPHYR_SUBDIRS = ephyr
 @KDRIVELINUX_TRUE@LINUX_SUBDIRS = linux
 SERVER_SUBDIRS = \
+	$(XSIXEL_SUBDIRS)		\
 	$(FBDEV_SUBDIRS)	\
 	$(XEPHYR_SUBDIRS)       \
 	$(XFAKE_SUBDIRS)
@@ -516,7 +522,7 @@
 	$(LINUX_SUBDIRS)	\
 	$(SERVER_SUBDIRS)
 
-DIST_SUBDIRS = fbdev ephyr src linux fake
+DIST_SUBDIRS = fbdev sixel ephyr src linux fake
 all: all-recursive
 
 .SUFFIXES:
diff -rNu hw/kdrive/sixel/Makefile.am hw/kdrive/sixel/Makefile.am
--- hw/kdrive/sixel/Makefile.am	1970-01-01 09:00:00.000000000 +0900
+++ hw/kdrive/sixel/Makefile.am	2014-09-19 11:01:10.000000000 +0900
@@ -0,0 +1,19 @@
+INCLUDES = \
+	@KDRIVE_PURE_INCS@ \
+	@KDRIVE_CFLAGS@ \
+	@XSIXEL_INCS@
+
+bin_PROGRAMS = Xsixel
+
+Xsixel_SOURCES = sixel.c
+
+Xsixel_LDADD = \
+	@KDRIVE_LIBS@ \
+	@XSIXEL_LIBS@
+
+Xsixel_DEPENDENCIES = @KDRIVE_LOCAL_LIBS@
+
+Xsixel_LDFLAGS = $(LD_EXPORT_SYMBOLS_FLAG)
+
+relink:
+	rm -f $(bin_PROGRAMS) && make $(bin_PROGRAMS)
diff -rNu hw/kdrive/sixel/Makefile.in hw/kdrive/sixel/Makefile.in
--- hw/kdrive/sixel/Makefile.in	1970-01-01 09:00:00.000000000 +0900
+++ hw/kdrive/sixel/Makefile.in	2014-09-19 11:03:52.000000000 +0900
@@ -0,0 +1,850 @@
+# Makefile.in generated by automake 1.14.1 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994-2013 Free Software Foundation, Inc.
+
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+VPATH = @srcdir@
+am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
+am__make_running_with_option = \
+  case $${target_option-} in \
+      ?) ;; \
+      *) echo "am__make_running_with_option: internal error: invalid" \
+              "target option '$${target_option-}' specified" >&2; \
+         exit 1;; \
+  esac; \
+  has_opt=no; \
+  sane_makeflags=$$MAKEFLAGS; \
+  if $(am__is_gnu_make); then \
+    sane_makeflags=$$MFLAGS; \
+  else \
+    case $$MAKEFLAGS in \
+      *\\[\ \	]*) \
+        bs=\\; \
+        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
+          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
+    esac; \
+  fi; \
+  skip_next=no; \
+  strip_trailopt () \
+  { \
+    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
+  }; \
+  for flg in $$sane_makeflags; do \
+    test $$skip_next = yes && { skip_next=no; continue; }; \
+    case $$flg in \
+      *=*|--*) continue;; \
+        -*I) strip_trailopt 'I'; skip_next=yes;; \
+      -*I?*) strip_trailopt 'I';; \
+        -*O) strip_trailopt 'O'; skip_next=yes;; \
+      -*O?*) strip_trailopt 'O';; \
+        -*l) strip_trailopt 'l'; skip_next=yes;; \
+      -*l?*) strip_trailopt 'l';; \
+      -[dEDm]) skip_next=yes;; \
+      -[JT]) skip_next=yes;; \
+    esac; \
+    case $$flg in \
+      *$$target_option*) has_opt=yes; break;; \
+    esac; \
+  done; \
+  test $$has_opt = yes
+am__make_dryrun = (target_option=n; $(am__make_running_with_option))
+am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
+pkgdatadir = $(datadir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkglibexecdir = $(libexecdir)/@PACKAGE@
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = @build@
+host_triplet = @host@
+bin_PROGRAMS = Xsixel$(EXEEXT)
+subdir = hw/kdrive/sixel
+DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
+	$(top_srcdir)/depcomp
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/m4/ac_define_dir.m4 \
+	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
+	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
+	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/xorg-tls.m4 \
+	$(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(install_sh) -d
+CONFIG_HEADER = $(top_builddir)/include/do-not-use-config.h \
+	$(top_builddir)/include/xorg-server.h \
+	$(top_builddir)/include/dix-config.h \
+	$(top_builddir)/include/xorg-config.h \
+	$(top_builddir)/include/xkb-config.h \
+	$(top_builddir)/include/xwin-config.h \
+	$(top_builddir)/include/kdrive-config.h \
+	$(top_builddir)/include/version-config.h
+CONFIG_CLEAN_FILES =
+CONFIG_CLEAN_VPATH_FILES =
+am__installdirs = "$(DESTDIR)$(bindir)"
+PROGRAMS = $(bin_PROGRAMS)
+am_Xsixel_OBJECTS = sixel.$(OBJEXT)
+Xsixel_OBJECTS = $(am_Xsixel_OBJECTS)
+AM_V_lt = $(am__v_lt_@AM_V@)
+am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
+am__v_lt_0 = --silent
+am__v_lt_1 = 
+Xsixel_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
+	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
+	$(Xsixel_LDFLAGS) $(LDFLAGS) -o $@
+AM_V_P = $(am__v_P_@AM_V@)
+am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
+am__v_P_0 = false
+am__v_P_1 = :
+AM_V_GEN = $(am__v_GEN_@AM_V@)
+am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
+am__v_GEN_0 = @echo "  GEN     " $@;
+am__v_GEN_1 = 
+AM_V_at = $(am__v_at_@AM_V@)
+am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
+am__v_at_0 = @
+am__v_at_1 = 
+DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/include
+depcomp = $(SHELL) $(top_srcdir)/depcomp
+am__depfiles_maybe = depfiles
+am__mv = mv -f
+COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
+	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
+	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
+	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
+	$(AM_CFLAGS) $(CFLAGS)
+AM_V_CC = $(am__v_CC_@AM_V@)
+am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
+am__v_CC_0 = @echo "  CC      " $@;
+am__v_CC_1 = 
+CCLD = $(CC)
+LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
+	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
+	$(AM_LDFLAGS) $(LDFLAGS) -o $@
+AM_V_CCLD = $(am__v_CCLD_@AM_V@)
+am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
+am__v_CCLD_0 = @echo "  CCLD    " $@;
+am__v_CCLD_1 = 
+SOURCES = $(Xsixel_SOURCES)
+DIST_SOURCES = $(Xsixel_SOURCES)
+am__can_run_installinfo = \
+  case $$AM_UPDATE_INFO_DIR in \
+    n|no|NO) false;; \
+    *) (install-info --version) >/dev/null 2>&1;; \
+  esac
+am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
+# Read a list of newline-separated strings from the standard input,
+# and print each of them once, without duplicates.  Input order is
+# *not* preserved.
+am__uniquify_input = $(AWK) '\
+  BEGIN { nonempty = 0; } \
+  { items[$$0] = 1; nonempty = 1; } \
+  END { if (nonempty) { for (i in items) print i; }; } \
+'
+# Make sure the list of sources is unique.  This is necessary because,
+# e.g., the same source file might be shared among _SOURCES variables
+# for different programs/libraries.
+am__define_uniq_tagged_files = \
+  list='$(am__tagged_files)'; \
+  unique=`for i in $$list; do \
+    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+  done | $(am__uniquify_input)`
+ETAGS = etags
+CTAGS = ctags
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+ADMIN_MAN_DIR = @ADMIN_MAN_DIR@
+ADMIN_MAN_SUFFIX = @ADMIN_MAN_SUFFIX@
+AMTAR = @AMTAR@
+AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
+APPLE_APPLICATIONS_DIR = @APPLE_APPLICATIONS_DIR@
+APPLE_APPLICATION_NAME = @APPLE_APPLICATION_NAME@
+APP_MAN_DIR = @APP_MAN_DIR@
+APP_MAN_SUFFIX = @APP_MAN_SUFFIX@
+AR = @AR@
+AS = @AS@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BASE_CFLAGS = @BASE_CFLAGS@
+BASE_FONT_PATH = @BASE_FONT_PATH@
+BUILD_DATE = @BUILD_DATE@
+BUILD_TIME = @BUILD_TIME@
+BUNDLE_ID_PREFIX = @BUNDLE_ID_PREFIX@
+CC = @CC@
+CCAS = @CCAS@
+CCASDEPMODE = @CCASDEPMODE@
+CCASFLAGS = @CCASFLAGS@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CHANGELOG_CMD = @CHANGELOG_CMD@
+COMPILEDDEFAULTFONTPATH = @COMPILEDDEFAULTFONTPATH@
+CPP = @CPP@
+CPPFLAGS = @CPPFLAGS@
+CWARNFLAGS = @CWARNFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DBUS_CFLAGS = @DBUS_CFLAGS@
+DBUS_LIBS = @DBUS_LIBS@
+DEFAULT_LIBRARY_PATH = @DEFAULT_LIBRARY_PATH@
+DEFAULT_LOGDIR = @DEFAULT_LOGDIR@
+DEFAULT_LOGPREFIX = @DEFAULT_LOGPREFIX@
+DEFAULT_MODULE_PATH = @DEFAULT_MODULE_PATH@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DGA_CFLAGS = @DGA_CFLAGS@
+DGA_LIBS = @DGA_LIBS@
+DIX_CFLAGS = @DIX_CFLAGS@
+DIX_LIB = @DIX_LIB@
+DLLTOOL = @DLLTOOL@
+DLOPEN_LIBS = @DLOPEN_LIBS@
+DMXEXAMPLES_DEP_CFLAGS = @DMXEXAMPLES_DEP_CFLAGS@
+DMXEXAMPLES_DEP_LIBS = @DMXEXAMPLES_DEP_LIBS@
+DMXMODULES_CFLAGS = @DMXMODULES_CFLAGS@
+DMXMODULES_LIBS = @DMXMODULES_LIBS@
+DMXXIEXAMPLES_DEP_CFLAGS = @DMXXIEXAMPLES_DEP_CFLAGS@
+DMXXIEXAMPLES_DEP_LIBS = @DMXXIEXAMPLES_DEP_LIBS@
+DMXXMUEXAMPLES_DEP_CFLAGS = @DMXXMUEXAMPLES_DEP_CFLAGS@
+DMXXMUEXAMPLES_DEP_LIBS = @DMXXMUEXAMPLES_DEP_LIBS@
+DOXYGEN = @DOXYGEN@
+DRI2PROTO_CFLAGS = @DRI2PROTO_CFLAGS@
+DRI2PROTO_LIBS = @DRI2PROTO_LIBS@
+DRIPROTO_CFLAGS = @DRIPROTO_CFLAGS@
+DRIPROTO_LIBS = @DRIPROTO_LIBS@
+DRIVER_MAN_DIR = @DRIVER_MAN_DIR@
+DRIVER_MAN_SUFFIX = @DRIVER_MAN_SUFFIX@
+DRI_CFLAGS = @DRI_CFLAGS@
+DRI_DRIVER_PATH = @DRI_DRIVER_PATH@
+DRI_LIBS = @DRI_LIBS@
+DSYMUTIL = @DSYMUTIL@
+DTRACE = @DTRACE@
+DUMPBIN = @DUMPBIN@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EGREP = @EGREP@
+EXEEXT = @EXEEXT@
+FGREP = @FGREP@
+FILE_MAN_DIR = @FILE_MAN_DIR@
+FILE_MAN_SUFFIX = @FILE_MAN_SUFFIX@
+FONT100DPIDIR = @FONT100DPIDIR@
+FONT75DPIDIR = @FONT75DPIDIR@
+FONTMISCDIR = @FONTMISCDIR@
+FONTOTFDIR = @FONTOTFDIR@
+FONTROOTDIR = @FONTROOTDIR@
+FONTTTFDIR = @FONTTTFDIR@
+FONTTYPE1DIR = @FONTTYPE1DIR@
+FOP = @FOP@
+GLX_ARCH_DEFINES = @GLX_ARCH_DEFINES@
+GLX_DEFINES = @GLX_DEFINES@
+GLX_TLS = @GLX_TLS@
+GL_CFLAGS = @GL_CFLAGS@
+GL_LIBS = @GL_LIBS@
+GREP = @GREP@
+HAL_CFLAGS = @HAL_CFLAGS@
+HAL_LIBS = @HAL_LIBS@
+INSTALL = @INSTALL@
+INSTALL_CMD = @INSTALL_CMD@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+KDRIVE_CFLAGS = @KDRIVE_CFLAGS@
+KDRIVE_INCS = @KDRIVE_INCS@
+KDRIVE_LIBS = @KDRIVE_LIBS@
+KDRIVE_LOCAL_LIBS = @KDRIVE_LOCAL_LIBS@
+KDRIVE_PURE_INCS = @KDRIVE_PURE_INCS@
+KDRIVE_PURE_LIBS = @KDRIVE_PURE_LIBS@
+KHRONOS_OPENGL_REGISTRY_CFLAGS = @KHRONOS_OPENGL_REGISTRY_CFLAGS@
+KHRONOS_OPENGL_REGISTRY_LIBS = @KHRONOS_OPENGL_REGISTRY_LIBS@
+KHRONOS_SPEC_DIR = @KHRONOS_SPEC_DIR@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LD_EXPORT_SYMBOLS_FLAG = @LD_EXPORT_SYMBOLS_FLAG@
+LEX = @LEX@
+LEXLIB = @LEXLIB@
+LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
+LIBDRM_CFLAGS = @LIBDRM_CFLAGS@
+LIBDRM_LIBS = @LIBDRM_LIBS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LIBSHA1_CFLAGS = @LIBSHA1_CFLAGS@
+LIBSHA1_LIBS = @LIBSHA1_LIBS@
+LIBTOOL = @LIBTOOL@
+LIB_MAN_DIR = @LIB_MAN_DIR@
+LIB_MAN_SUFFIX = @LIB_MAN_SUFFIX@
+LIPO = @LIPO@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAIN_LIB = @MAIN_LIB@
+MAKEINFO = @MAKEINFO@
+MANIFEST_TOOL = @MANIFEST_TOOL@
+MAN_SUBSTS = @MAN_SUBSTS@
+MISC_MAN_DIR = @MISC_MAN_DIR@
+MISC_MAN_SUFFIX = @MISC_MAN_SUFFIX@
+MKDIR_P = @MKDIR_P@
+NM = @NM@
+NMEDIT = @NMEDIT@
+OBJC = @OBJC@
+OBJCCLD = @OBJCCLD@
+OBJCDEPMODE = @OBJCDEPMODE@
+OBJCFLAGS = @OBJCFLAGS@
+OBJCLINK = @OBJCLINK@
+OBJDUMP = @OBJDUMP@
+OBJEXT = @OBJEXT@
+OPENSSL_CFLAGS = @OPENSSL_CFLAGS@
+OPENSSL_LIBS = @OPENSSL_LIBS@
+OS_LIB = @OS_LIB@
+OTOOL = @OTOOL@
+OTOOL64 = @OTOOL64@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_URL = @PACKAGE_URL@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+PCIACCESS_CFLAGS = @PCIACCESS_CFLAGS@
+PCIACCESS_LIBS = @PCIACCESS_LIBS@
+PCI_TXT_IDS_PATH = @PCI_TXT_IDS_PATH@
+PIXMAN_CFLAGS = @PIXMAN_CFLAGS@
+PIXMAN_LIBS = @PIXMAN_LIBS@
+PKG_CONFIG = @PKG_CONFIG@
+PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
+PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
+PROJECTROOT = @PROJECTROOT@
+RANLIB = @RANLIB@
+RAWCPP = @RAWCPP@
+RAWCPPFLAGS = @RAWCPPFLAGS@
+RELEASE_DATE = @RELEASE_DATE@
+SDK_REQUIRED_MODULES = @SDK_REQUIRED_MODULES@
+SED = @SED@
+SELINUX_CFLAGS = @SELINUX_CFLAGS@
+SELINUX_LIBS = @SELINUX_LIBS@
+SERVER_MISC_CONFIG_PATH = @SERVER_MISC_CONFIG_PATH@
+SET_MAKE = @SET_MAKE@
+SHA1_CFLAGS = @SHA1_CFLAGS@
+SHA1_LIBS = @SHA1_LIBS@
+SHELL = @SHELL@
+SIXEL_CFLAGS = @SIXEL_CFLAGS@
+SIXEL_LIBS = @SIXEL_LIBS@
+SOLARIS_ASM_CFLAGS = @SOLARIS_ASM_CFLAGS@
+SOLARIS_INOUT_ARCH = @SOLARIS_INOUT_ARCH@
+STRICT_CFLAGS = @STRICT_CFLAGS@
+STRIP = @STRIP@
+STYLESHEET_SRCDIR = @STYLESHEET_SRCDIR@
+SYSCONFDIR = @SYSCONFDIR@
+TSLIB_CFLAGS = @TSLIB_CFLAGS@
+TSLIB_LIBS = @TSLIB_LIBS@
+UDEV_CFLAGS = @UDEV_CFLAGS@
+UDEV_LIBS = @UDEV_LIBS@
+UTILS_SYS_LIBS = @UTILS_SYS_LIBS@
+VENDOR_NAME_SHORT = @VENDOR_NAME_SHORT@
+VERSION = @VERSION@
+WINDOWSWM_CFLAGS = @WINDOWSWM_CFLAGS@
+WINDOWSWM_LIBS = @WINDOWSWM_LIBS@
+WINDRES = @WINDRES@
+X11EXAMPLES_DEP_CFLAGS = @X11EXAMPLES_DEP_CFLAGS@
+X11EXAMPLES_DEP_LIBS = @X11EXAMPLES_DEP_LIBS@
+XDMCP_CFLAGS = @XDMCP_CFLAGS@
+XDMCP_LIBS = @XDMCP_LIBS@
+XDMXCONFIG_DEP_CFLAGS = @XDMXCONFIG_DEP_CFLAGS@
+XDMXCONFIG_DEP_LIBS = @XDMXCONFIG_DEP_LIBS@
+XDMX_CFLAGS = @XDMX_CFLAGS@
+XDMX_LIBS = @XDMX_LIBS@
+XDMX_SYS_LIBS = @XDMX_SYS_LIBS@
+XEPHYR_CFLAGS = @XEPHYR_CFLAGS@
+XEPHYR_INCS = @XEPHYR_INCS@
+XEPHYR_LIBS = @XEPHYR_LIBS@
+XF86CONFIGDIR = @XF86CONFIGDIR@
+XF86CONFIGFILE = @XF86CONFIGFILE@
+XF86VIDMODE_CFLAGS = @XF86VIDMODE_CFLAGS@
+XF86VIDMODE_LIBS = @XF86VIDMODE_LIBS@
+XKB_BASE_DIRECTORY = @XKB_BASE_DIRECTORY@
+XKB_BIN_DIRECTORY = @XKB_BIN_DIRECTORY@
+XKB_COMPILED_DIR = @XKB_COMPILED_DIR@
+XKB_DFLT_LAYOUT = @XKB_DFLT_LAYOUT@
+XKB_DFLT_MODEL = @XKB_DFLT_MODEL@
+XKB_DFLT_OPTIONS = @XKB_DFLT_OPTIONS@
+XKB_DFLT_RULES = @XKB_DFLT_RULES@
+XKB_DFLT_VARIANT = @XKB_DFLT_VARIANT@
+XKM_OUTPUT_DIR = @XKM_OUTPUT_DIR@
+XLIB_CFLAGS = @XLIB_CFLAGS@
+XLIB_LIBS = @XLIB_LIBS@
+XMLTO = @XMLTO@
+XNESTMODULES_CFLAGS = @XNESTMODULES_CFLAGS@
+XNESTMODULES_LIBS = @XNESTMODULES_LIBS@
+XNEST_LIBS = @XNEST_LIBS@
+XNEST_SYS_LIBS = @XNEST_SYS_LIBS@
+XORG_CFLAGS = @XORG_CFLAGS@
+XORG_INCS = @XORG_INCS@
+XORG_LIBS = @XORG_LIBS@
+XORG_MALLOC_DEBUG_ENV = @XORG_MALLOC_DEBUG_ENV@
+XORG_MAN_PAGE = @XORG_MAN_PAGE@
+XORG_MODULES_CFLAGS = @XORG_MODULES_CFLAGS@
+XORG_MODULES_LIBS = @XORG_MODULES_LIBS@
+XORG_OS_SUBDIR = @XORG_OS_SUBDIR@
+XORG_SGML_PATH = @XORG_SGML_PATH@
+XORG_SYS_LIBS = @XORG_SYS_LIBS@
+XPBPROXY_CFLAGS = @XPBPROXY_CFLAGS@
+XPBPROXY_LIBS = @XPBPROXY_LIBS@
+XQUARTZ_LIBS = @XQUARTZ_LIBS@
+XQUARTZ_SPARKLE = @XQUARTZ_SPARKLE@
+XRESEXAMPLES_DEP_CFLAGS = @XRESEXAMPLES_DEP_CFLAGS@
+XRESEXAMPLES_DEP_LIBS = @XRESEXAMPLES_DEP_LIBS@
+XSERVERCFLAGS_CFLAGS = @XSERVERCFLAGS_CFLAGS@
+XSERVERCFLAGS_LIBS = @XSERVERCFLAGS_LIBS@
+XSERVERLIBS_CFLAGS = @XSERVERLIBS_CFLAGS@
+XSERVERLIBS_LIBS = @XSERVERLIBS_LIBS@
+XSERVER_LIBS = @XSERVER_LIBS@
+XSERVER_SYS_LIBS = @XSERVER_SYS_LIBS@
+XSIXEL_INCS = @XSIXEL_INCS@
+XSIXEL_LIBS = @XSIXEL_LIBS@
+XSLTPROC = @XSLTPROC@
+XSL_STYLESHEET = @XSL_STYLESHEET@
+XTSTEXAMPLES_DEP_CFLAGS = @XTSTEXAMPLES_DEP_CFLAGS@
+XTSTEXAMPLES_DEP_LIBS = @XTSTEXAMPLES_DEP_LIBS@
+XVFB_LIBS = @XVFB_LIBS@
+XVFB_SYS_LIBS = @XVFB_SYS_LIBS@
+XWINMODULES_CFLAGS = @XWINMODULES_CFLAGS@
+XWINMODULES_LIBS = @XWINMODULES_LIBS@
+XWIN_LIBS = @XWIN_LIBS@
+XWIN_SERVER_NAME = @XWIN_SERVER_NAME@
+XWIN_SYS_LIBS = @XWIN_SYS_LIBS@
+YACC = @YACC@
+YFLAGS = @YFLAGS@
+__XCONFIGDIR__ = @__XCONFIGDIR__@
+__XCONFIGFILE__ = @__XCONFIGFILE__@
+abi_ansic = @abi_ansic@
+abi_extension = @abi_extension@
+abi_videodrv = @abi_videodrv@
+abi_xinput = @abi_xinput@
+abs_builddir = @abs_builddir@
+abs_srcdir = @abs_srcdir@
+abs_top_builddir = @abs_top_builddir@
+abs_top_srcdir = @abs_top_srcdir@
+ac_ct_AR = @ac_ct_AR@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+am__tar = @am__tar@
+am__untar = @am__untar@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+builddir = @builddir@
+datadir = @datadir@
+datarootdir = @datarootdir@
+docdir = @docdir@
+driverdir = @driverdir@
+dvidir = @dvidir@
+exec_prefix = @exec_prefix@
+extdir = @extdir@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+htmldir = @htmldir@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localedir = @localedir@
+localstatedir = @localstatedir@
+logdir = @logdir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+moduledir = @moduledir@
+oldincludedir = @oldincludedir@
+pdfdir = @pdfdir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+psdir = @psdir@
+sbindir = @sbindir@
+sdkdir = @sdkdir@
+sharedstatedir = @sharedstatedir@
+srcdir = @srcdir@
+symbol_visibility = @symbol_visibility@
+sysconfdir = @sysconfdir@
+sysconfigdir = @sysconfigdir@
+target_alias = @target_alias@
+top_build_prefix = @top_build_prefix@
+top_builddir = @top_builddir@
+top_srcdir = @top_srcdir@
+INCLUDES = \
+	@KDRIVE_PURE_INCS@ \
+	@KDRIVE_CFLAGS@ \
+	@XSIXEL_INCS@
+
+Xsixel_SOURCES = sixel.c
+Xsixel_LDADD = \
+	@KDRIVE_LIBS@ \
+	@XSIXEL_LIBS@
+
+Xsixel_DEPENDENCIES = @KDRIVE_LOCAL_LIBS@
+Xsixel_LDFLAGS = $(LD_EXPORT_SYMBOLS_FLAG)
+all: all-am
+
+.SUFFIXES:
+.SUFFIXES: .c .lo .o .obj
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
+	        && { if test -f $@; then exit 0; else break; fi; }; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign hw/kdrive/sixel/Makefile'; \
+	$(am__cd) $(top_srcdir) && \
+	  $(AUTOMAKE) --foreign hw/kdrive/sixel/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(am__aclocal_m4_deps):
+install-binPROGRAMS: $(bin_PROGRAMS)
+	@$(NORMAL_INSTALL)
+	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
+	if test -n "$$list"; then \
+	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
+	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
+	fi; \
+	for p in $$list; do echo "$$p $$p"; done | \
+	sed 's/$(EXEEXT)$$//' | \
+	while read p p1; do if test -f $$p \
+	 || test -f $$p1 \
+	  ; then echo "$$p"; echo "$$p"; else :; fi; \
+	done | \
+	sed -e 'p;s,.*/,,;n;h' \
+	    -e 's|.*|.|' \
+	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
+	sed 'N;N;N;s,\n, ,g' | \
+	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
+	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
+	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
+	    else { print "f", $$3 "/" $$4, $$1; } } \
+	  END { for (d in files) print "f", d, files[d] }' | \
+	while read type dir files; do \
+	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
+	    test -z "$$files" || { \
+	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
+	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
+	    } \
+	; done
+
+uninstall-binPROGRAMS:
+	@$(NORMAL_UNINSTALL)
+	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
+	files=`for p in $$list; do echo "$$p"; done | \
+	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
+	      -e 's/$$/$(EXEEXT)/' \
+	`; \
+	test -n "$$list" || exit 0; \
+	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
+	cd "$(DESTDIR)$(bindir)" && rm -f $$files
+
+clean-binPROGRAMS:
+	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
+	echo " rm -f" $$list; \
+	rm -f $$list || exit $$?; \
+	test -n "$(EXEEXT)" || exit 0; \
+	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
+	echo " rm -f" $$list; \
+	rm -f $$list
+
+Xsixel$(EXEEXT): $(Xsixel_OBJECTS) $(Xsixel_DEPENDENCIES) $(EXTRA_Xsixel_DEPENDENCIES) 
+	@rm -f Xsixel$(EXEEXT)
+	$(AM_V_CCLD)$(Xsixel_LINK) $(Xsixel_OBJECTS) $(Xsixel_LDADD) $(LIBS)
+
+mostlyclean-compile:
+	-rm -f *.$(OBJEXT)
+
+distclean-compile:
+	-rm -f *.tab.c
+
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sixel.Po@am__quote@
+
+.c.o:
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<
+
+.c.obj:
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
+
+.c.lo:
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+ID: $(am__tagged_files)
+	$(am__define_uniq_tagged_files); mkid -fID $$unique
+tags: tags-am
+TAGS: tags
+
+tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
+	set x; \
+	here=`pwd`; \
+	$(am__define_uniq_tagged_files); \
+	shift; \
+	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
+	  test -n "$$unique" || unique=$$empty_fix; \
+	  if test $$# -gt 0; then \
+	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	      "$$@" $$unique; \
+	  else \
+	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	      $$unique; \
+	  fi; \
+	fi
+ctags: ctags-am
+
+CTAGS: ctags
+ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
+	$(am__define_uniq_tagged_files); \
+	test -z "$(CTAGS_ARGS)$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && $(am__cd) $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) "$$here"
+cscopelist: cscopelist-am
+
+cscopelist-am: $(am__tagged_files)
+	list='$(am__tagged_files)'; \
+	case "$(srcdir)" in \
+	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
+	  *) sdir=$(subdir)/$(srcdir) ;; \
+	esac; \
+	for i in $$list; do \
+	  if test -f "$$i"; then \
+	    echo "$(subdir)/$$i"; \
+	  else \
+	    echo "$$sdir/$$i"; \
+	  fi; \
+	done >> $(top_builddir)/cscope.files
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
+	list='$(DISTFILES)'; \
+	  dist_files=`for file in $$list; do echo $$file; done | \
+	  sed -e "s|^$$srcdirstrip/||;t" \
+	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
+	case $$dist_files in \
+	  */*) $(MKDIR_P) `echo "$$dist_files" | \
+			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
+			   sort -u` ;; \
+	esac; \
+	for file in $$dist_files; do \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  if test -d $$d/$$file; then \
+	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
+	    if test -d "$(distdir)/$$file"; then \
+	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
+	    fi; \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
+	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
+	    fi; \
+	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
+	  else \
+	    test -f "$(distdir)/$$file" \
+	    || cp -p $$d/$$file "$(distdir)/$$file" \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-am
+all-am: Makefile $(PROGRAMS)
+installdirs:
+	for dir in "$(DESTDIR)$(bindir)"; do \
+	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
+	done
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	if test -z '$(STRIP)'; then \
+	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	      install; \
+	else \
+	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
+	fi
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
+
+distclean: distclean-am
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+distclean-am: clean-am distclean-compile distclean-generic \
+	distclean-tags
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+html-am:
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-dvi: install-dvi-am
+
+install-dvi-am:
+
+install-exec-am: install-binPROGRAMS
+
+install-html: install-html-am
+
+install-html-am:
+
+install-info: install-info-am
+
+install-info-am:
+
+install-man:
+
+install-pdf: install-pdf-am
+
+install-pdf-am:
+
+install-ps: install-ps-am
+
+install-ps-am:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-compile mostlyclean-generic \
+	mostlyclean-libtool
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-binPROGRAMS
+
+.MAKE: install-am install-strip
+
+.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
+	clean-binPROGRAMS clean-generic clean-libtool cscopelist-am \
+	ctags ctags-am distclean distclean-compile distclean-generic \
+	distclean-libtool distclean-tags distdir dvi dvi-am html \
+	html-am info info-am install install-am install-binPROGRAMS \
+	install-data install-data-am install-dvi install-dvi-am \
+	install-exec install-exec-am install-html install-html-am \
+	install-info install-info-am install-man install-pdf \
+	install-pdf-am install-ps install-ps-am install-strip \
+	installcheck installcheck-am installdirs maintainer-clean \
+	maintainer-clean-generic mostlyclean mostlyclean-compile \
+	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
+	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS
+
+
+relink:
+	rm -f $(bin_PROGRAMS) && make $(bin_PROGRAMS)
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
diff -rNu hw/kdrive/src/Makefile.am hw/kdrive/src/Makefile.am
--- hw/kdrive/src/Makefile.am	2012-05-18 02:09:03.000000000 +0900
+++ hw/kdrive/src/Makefile.am	2014-09-19 11:01:10.000000000 +0900
@@ -21,6 +21,7 @@
 	kinput.c	\
 	kmode.c		\
 	kshadow.c	\
+	kexeccmd.c	\
 	$(KDRIVE_XV_SOURCES) \
         $(top_srcdir)/mi/miinitext.c
 
diff -rNu hw/kdrive/src/Makefile.in hw/kdrive/src/Makefile.in
--- hw/kdrive/src/Makefile.in	2014-09-19 10:56:57.000000000 +0900
+++ hw/kdrive/src/Makefile.in	2014-09-19 11:03:53.000000000 +0900
@@ -103,11 +103,11 @@
 LTLIBRARIES = $(noinst_LTLIBRARIES)
 libkdrive_la_LIBADD =
 am__libkdrive_la_SOURCES_DIST = fourcc.h kcmap.c kdrive.c kdrive.h \
-	kinfo.c kinput.c kmode.c kshadow.c kxv.c kxv.h \
+	kinfo.c kinput.c kmode.c kshadow.c kexeccmd.c kxv.c kxv.h \
 	$(top_srcdir)/mi/miinitext.c
 @XV_TRUE@am__objects_1 = kxv.lo
 am_libkdrive_la_OBJECTS = kcmap.lo kdrive.lo kinfo.lo kinput.lo \
-	kmode.lo kshadow.lo $(am__objects_1) miinitext.lo
+	kmode.lo kshadow.lo kexeccmd.lo $(am__objects_1) miinitext.lo
 libkdrive_la_OBJECTS = $(am_libkdrive_la_OBJECTS)
 AM_V_lt = $(am__v_lt_@AM_V@)
 am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
@@ -354,6 +354,8 @@
 SHA1_CFLAGS = @SHA1_CFLAGS@
 SHA1_LIBS = @SHA1_LIBS@
 SHELL = @SHELL@
+SIXEL_CFLAGS = @SIXEL_CFLAGS@
+SIXEL_LIBS = @SIXEL_LIBS@
 SOLARIS_ASM_CFLAGS = @SOLARIS_ASM_CFLAGS@
 SOLARIS_INOUT_ARCH = @SOLARIS_INOUT_ARCH@
 STRICT_CFLAGS = @STRICT_CFLAGS@
@@ -424,6 +426,8 @@
 XSERVERLIBS_LIBS = @XSERVERLIBS_LIBS@
 XSERVER_LIBS = @XSERVER_LIBS@
 XSERVER_SYS_LIBS = @XSERVER_SYS_LIBS@
+XSIXEL_INCS = @XSIXEL_INCS@
+XSIXEL_LIBS = @XSIXEL_LIBS@
 XSLTPROC = @XSLTPROC@
 XSL_STYLESHEET = @XSL_STYLESHEET@
 XTSTEXAMPLES_DEP_CFLAGS = @XTSTEXAMPLES_DEP_CFLAGS@
@@ -521,6 +525,7 @@
 	kinput.c	\
 	kmode.c		\
 	kshadow.c	\
+	kexeccmd.c	\
 	$(KDRIVE_XV_SOURCES) \
         $(top_srcdir)/mi/miinitext.c
 
@@ -588,6 +593,7 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fbcmap_mi.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kcmap.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kdrive.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kexeccmd.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kinfo.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kinput.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kmode.Plo@am__quote@
diff -rNu hw/kdrive/src/kdrive.c hw/kdrive/src/kdrive.c
--- hw/kdrive/src/kdrive.c	2012-08-20 00:45:55.000000000 +0900
+++ hw/kdrive/src/kdrive.c	2014-09-19 11:01:10.000000000 +0900
@@ -81,6 +81,7 @@
 DDXPointRec kdOrigin;
 Bool kdHasPointer = FALSE;
 Bool kdHasKbd = FALSE;
+char		    *kdExecuteCommand = NULL;
 
 static Bool kdCaughtSignal = FALSE;
 
@@ -436,6 +437,7 @@
         ("-origin X,Y      Locates the next screen in the the virtual screen (Xinerama)\n");
     ErrorF("-switchCmd       Command to execute on vt switch\n");
     ErrorF("-zap             Terminate server on Ctrl+Alt+Backspace\n");
+    ErrorF("-exec command    Execute command after server started\n");
     ErrorF
         ("vtxx             Use virtual terminal xx instead of the next available\n");
 }
@@ -544,6 +546,12 @@
             UseMsg();
         KdAddConfigKeyboard(argv[i + 1]);
         kdHasKbd = TRUE;
+    }
+    if (!strcmp (argv[i], "-exec")) {
+        if ((i+1) < argc)
+            kdExecuteCommand = argv[i + 1];
+        else
+            UseMsg();
         return 2;
     }
 
diff -rNu hw/kdrive/src/kdrive.h hw/kdrive/src/kdrive.h
--- hw/kdrive/src/kdrive.h	2012-05-18 02:09:03.000000000 +0900
+++ hw/kdrive/src/kdrive.h	2014-09-19 11:01:10.000000000 +0900
@@ -483,6 +483,10 @@
 /* kinput.c */
 void
  KdInitInput(void);
+
+void
+KdExecuteChildCommand(void);
+
 void
  KdCloseInput(void);
 
diff -rNu hw/kdrive/src/kexeccmd.c hw/kdrive/src/kexeccmd.c
--- hw/kdrive/src/kexeccmd.c	1970-01-01 09:00:00.000000000 +0900
+++ hw/kdrive/src/kexeccmd.c	2014-09-21 00:48:58.000000000 +0900
@@ -0,0 +1,38 @@
+#ifdef HAVE_CONFIG_H
+#include <kdrive-config.h>
+#endif
+#include <stdio.h>
+#include <pthread.h>
+#include "kdrive.h"
+#include "opaque.h"
+
+extern char *kdExecuteCommand;
+
+static void *child_command(void *unused)
+{
+    FILE *cmd;
+    char buf[512];
+
+    sprintf(buf, ":%s", display);
+    fprintf(stderr, "setenv DISPLAY=%s", buf);
+    setenv("DISPLAY", buf, 1);
+    fprintf(stderr, "Starting child command: %s", kdExecuteCommand);
+    cmd = popen(kdExecuteCommand, "r");
+    if (!cmd) {
+        fprintf(stderr, "Error while starting child command: %s", kdExecuteCommand);
+        return NULL;
+    }
+    while (fgets(buf, sizeof(buf), cmd)) {
+        fprintf(stderr, "> %s", buf);
+    }
+    fprintf(stderr, "Child command returned with status %d", pclose (cmd));
+    return NULL;
+}
+
+void KdExecuteChildCommand(void)
+{
+    pthread_t thread_id;
+    if (!kdExecuteCommand)
+        return;
+    pthread_create(&thread_id, NULL, &child_command, NULL);
+}
diff -rNu hw/kdrive/src/kinput.c hw/kdrive/src/kinput.c
--- hw/kdrive/src/kinput.c	2012-08-20 00:41:37.000000000 +0900
+++ hw/kdrive/src/kinput.c	2014-09-19 11:01:10.000000000 +0900
@@ -1300,6 +1300,7 @@
     }
 
     mieqInit();
+    KdExecuteChildCommand();
 }
 
 void
diff -rNu include/do-not-use-config.h.in include/do-not-use-config.h.in
--- include/do-not-use-config.h.in	2014-09-19 10:56:27.000000000 +0900
+++ include/do-not-use-config.h.in	2014-09-19 11:03:24.000000000 +0900
@@ -262,6 +262,9 @@
 /* Define to 1 if you have the `shmctl64' function. */
 #undef HAVE_SHMCTL64
 
+/* Define to 1 if you have the <sixel.h> header file. */
+#undef HAVE_SIXEL_H
+
 /* Define to 1 if the system has the type `socklen_t'. */
 #undef HAVE_SOCKLEN_T
 
@@ -666,6 +669,9 @@
 /* Use libpciaccess for all pci manipulation */
 #undef XSERVER_LIBPCIACCESS
 
+/* Build Xsixel server */
+#undef XSIXELSERVER
+
 /* Support XSync extension */
 #undef XSYNC
 
diff -rNu os/osinit.c os/osinit.c
--- os/osinit.c	2012-05-18 02:09:04.000000000 +0900
+++ os/osinit.c	2014-09-19 11:01:27.000000000 +0900
@@ -204,9 +204,11 @@
 #endif
 
 #if !defined(__CYGWIN__)
+#if  0
         fclose(stdin);
         fclose(stdout);
 #endif
+#endif
         /* 
          * If a write of zero bytes to stderr returns non-zero, i.e. -1, 
          * then writing to stderr failed, and we'll write somewhere else 
diff -rNu startx.sh startx.sh
--- startx.sh	1970-01-01 09:00:00.000000000 +0900
+++ startx.sh	2014-09-19 11:01:10.000000000 +0900
@@ -0,0 +1,3 @@
+#!/bin/sh
+
+Xsixel :1 -exec twm 2> /dev/null
diff -rNu stop.sh stop.sh
--- stop.sh	1970-01-01 09:00:00.000000000 +0900
+++ stop.sh	2014-09-19 11:01:10.000000000 +0900
@@ -0,0 +1,3 @@
+#!/bin/sh
+
+pkill Xsixel
diff -rNu /dev/null hw/kdrive/sixel/sixel.c
--- /dev/null	2014-10-28 21:04:59.000000000 +0900
+++ hw/kdrive/sixel/sixel.c	2014-10-28 23:20:58.000000000 +0900
@@ -0,0 +1,1264 @@
+/*
+ * Copyright ?? 2004 PillowElephantBadgerBankPond
+ * Copyright ?? 2014 Sergii Pylypenko
+ * Copyright ?? 2014 Hayaki Saito
+ *
+ * Permission to use, copy, modify, distribute, and sell this software and its
+ * documentation for any purpose is hereby granted without fee, provided that
+ * the above copyright notice appear in all copies and that both that
+ * copyright notice and this permission notice appear in supporting
+ * documentation, and that the name of PillowElephantBadgerBankPond not be used in
+ * advertising or publicity pertaining to distribution of the software without
+ * specific, written prior permission.    PillowElephantBadgerBankPond makes no
+ * representations about the suitability of this software for any purpose.    It
+ * is provided "as is" without express or implied warranty.
+ *
+ * PillowElephantBadgerBankPond DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
+ * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
+ * EVENT SHALL PillowElephantBadgerBankPond BE LIABLE FOR ANY SPECIAL, INDIRECT OR
+ * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
+ * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
+ * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
+ * PERFORMANCE OF THIS SOFTWARE.
+ *
+ * It's really not my fault - see it was the elephants!!
+ *    - jaymz
+ *
+ */
+#ifdef HAVE_CONFIG_H
+#include "kdrive-config.h"
+#endif
+#include "kdrive.h"
+#include <sixel.h>
+#include <termios.h>
+#include <X11/keysym.h>
+#include <sys/wait.h>
+#if USE_MUTEX
+# include <pthread.h>
+#endif
+#include <signal.h>
+#include <sys/ioctl.h>
+#include <unistd.h>
+
+#define USE_DECMOUSE 1
+#define USE_FILTER_RECTANGLE 1
+
+static void sixelFini(void);
+static Bool sixelScreenInit(KdScreenInfo *screen);
+static Bool sixelFinishInitScreen(ScreenPtr pScreen);
+static Bool sixelCreateRes(ScreenPtr pScreen);
+static Bool sixelMapFramebuffer(KdScreenInfo *screen);
+
+static void sixelKeyboardFini(KdKeyboardInfo *ki);
+static Status sixelKeyboardInit(KdKeyboardInfo *ki);
+static Status sixelKeyboardEnable(KdKeyboardInfo *ki);
+static void sixelKeyboardDisable(KdKeyboardInfo *ki);
+static void sixelKeyboardLeds(KdKeyboardInfo *ki, int leds);
+static void sixelKeyboardBell(KdKeyboardInfo *ki, int volume, int frequency, int duration);
+
+static Bool sixelMouseInit(KdPointerInfo *pi);
+static void sixelMouseFini(KdPointerInfo *pi);
+static Status sixelMouseEnable(KdPointerInfo *pi);
+static void sixelMouseDisable(KdPointerInfo *pi);
+
+KdKeyboardInfo *sixelKeyboard = NULL;
+KdPointerInfo *sixelPointer = NULL;
+#if USE_MUTEX
+pthread_mutex_t sixel_mutex;
+#endif
+
+#if 0
+#define DEBUG 1
+#endif
+
+#if DEBUG
+#define TRACE(s) printf(s)
+#define TRACE1(s, arg1) printf(s, arg1)
+#define TRACE2(s, arg1, arg2) printf(s, arg1, arg2)
+#define TRACE3(s, arg1, arg2, arg3) printf(s, arg1, arg2, arg3)
+#define TRACE4(s, arg1, arg2, arg3, arg4) printf(s, arg1, arg2, arg3, arg4)
+#define TRACE5(s, arg1, arg2, arg3, arg4, arg5) printf(s, arg1, arg2, arg3, arg4, arg5)
+#else
+#define TRACE(s)
+#define TRACE1(s, arg1)
+#define TRACE2(s, arg1, arg2)
+#define TRACE3(s, arg1, arg2, arg3)
+#define TRACE4(s, arg1, arg2, arg3, arg4)
+#define TRACE5(s, arg1, arg2, arg3, arg4, arg5)
+#endif
+
+KdKeyboardDriver sixelKeyboardDriver = {
+    .name = "keyboard",
+    .Init = sixelKeyboardInit,
+    .Fini = sixelKeyboardFini,
+    .Enable = sixelKeyboardEnable,
+    .Disable = sixelKeyboardDisable,
+    .Leds = sixelKeyboardLeds,
+    .Bell = sixelKeyboardBell,
+};
+
+KdPointerDriver sixelMouseDriver = {
+    .name = "mouse",
+    .Init = sixelMouseInit,
+    .Fini = sixelMouseFini,
+    .Enable = sixelMouseEnable,
+    .Disable = sixelMouseDisable,
+};
+
+
+KdCardFuncs sixelFuncs = {
+    .scrinit = sixelScreenInit,    /* scrinit */
+    .finishInitScreen = sixelFinishInitScreen, /* finishInitScreen */
+    .createRes = sixelCreateRes,    /* createRes */
+};
+
+int mouseState = 0;
+
+enum { NUMRECTS = 32, FULLSCREEN_REFRESH_TIME = 1000 };
+
+typedef struct
+{
+    int w;
+    int h;
+    int pitch;
+    int pixel_w, pixel_h;
+    int cell_w, cell_h;
+    Rotation randr;
+    Bool shadow;
+    unsigned char *buffer;
+    unsigned char *bitmap;
+    sixel_dither_t *dither;
+    sixel_output_t *output;
+} SIXEL_Driver;
+
+static SIXEL_Driver *g_driver = NULL;
+
+#define SIXEL_UP                (1 << 12 | ('A' - '@'))
+#define SIXEL_DOWN              (1 << 12 | ('B' - '@'))
+#define SIXEL_RIGHT             (1 << 12 | ('C' - '@'))
+#define SIXEL_LEFT              (1 << 12 | ('D' - '@'))
+#define SIXEL_END               (1 << 12 | ('F' - '@'))
+#define SIXEL_HOME              (1 << 12 | ('H' - '@'))
+#define SIXEL_FOCUSIN           (1 << 12 | ('I' - '@'))
+#define SIXEL_FOCUSOUT          (1 << 12 | ('O' - '@'))
+#define SIXEL_F1                (1 << 12 | ('P' - '@'))
+#define SIXEL_F2                (1 << 12 | ('Q' - '@'))
+#define SIXEL_F3                (1 << 12 | ('R' - '@'))
+#define SIXEL_F4                (1 << 12 | ('S' - '@'))
+#define SIXEL_FKEYS             (1 << 12 | ('~' - '@'))
+#define SIXEL_MOUSE_SGR         (1 << 12 | ('<' - ';') << 4 << 6 | ('M' - '@'))
+#define SIXEL_MOUSE_SGR_RELEASE (1 << 12 | ('<' - ';') << 4 << 6 | ('m' - '@'))
+#define SIXEL_MOUSE_DEC         (1 << 12 | ('&' - 0x1f) << 6 | ('w' - '@'))
+#define SIXEL_DTTERM_SEQS       (1 << 12 | ('t' - '@'))
+#define SIXEL_UNKNOWN           (513)
+
+typedef struct _key {
+    int params[256];
+    int nparams;
+    int value;
+} sixel_key_t;
+
+enum _state {
+    STATE_GROUND = 0,
+    STATE_ESC = 1,
+    STATE_CSI = 2,
+    STATE_CSI_IGNORE = 3,
+    STATE_CSI_PARAM = 4,
+};
+
+static int get_input(char *buf, int size) {
+    fd_set fdset;
+    struct timeval timeout;
+    FD_ZERO(&fdset);
+    FD_SET(STDIN_FILENO, &fdset);
+    timeout.tv_sec = 0;
+    timeout.tv_usec = 1;
+    if (select(STDIN_FILENO + 1, &fdset, NULL, NULL, &timeout) == 1)
+        return read(STDIN_FILENO, buf, size);
+    return 0;
+}
+
+static int getkeys(char *buf, int nread, sixel_key_t *keys)
+{
+    int i, c;
+    int size = 0;
+    static int state = STATE_GROUND;
+    static int ibytes = 0;
+    static int pbytes = 0;
+
+    for (i = 0; i < nread; i++) {
+        c = buf[i];
+restart:
+        switch (state) {
+        case STATE_GROUND:
+            switch (c) {
+            case 0x1b:
+                state = STATE_ESC;
+                break;
+            default:
+                keys[size++].value = c;
+                break;
+            }
+            break;
+        case STATE_ESC:
+            switch (c) {
+            case 'O':
+            case '[':
+                keys[size].nparams = 0;
+                pbytes = 0;
+                state = STATE_CSI;
+                break;
+            default:
+                keys[size++].value = 0x1b;
+                state = STATE_GROUND;
+                goto restart;
+            }
+            break;
+        case STATE_CSI:
+            switch (c) {
+            case '\x1b':
+                state = STATE_ESC;
+                break;
+            case '\x00'...'\x1a':
+            case '\x1c'...'\x1f':
+            case '\x7f':
+                break;
+            case ' '...'/':
+                ibytes = c - ' ';
+                pbytes = 0;
+                state = STATE_CSI_PARAM;
+                break;
+            case '0'...'9':
+                ibytes = 0;
+                pbytes = c - '0';
+                keys[size].nparams = 0;
+                state = STATE_CSI_PARAM;
+                break;
+            case '<'...'?':
+                ibytes = (c - ';') << 4;
+                keys[size].nparams = 0;
+                state = STATE_CSI_PARAM;
+                break;
+            case '@'...'~':
+                keys[size].nparams = 0;
+                keys[size++].value = 1 << 12 | (c - '@');
+                state = STATE_GROUND;
+                break;
+            default:
+                state = STATE_GROUND;
+                break;
+            }
+            break;
+        case STATE_CSI_PARAM:
+            switch (c) {
+            case '\x1b':
+                state = STATE_ESC;
+                break;
+            case '\x00'...'\x1a':
+            case '\x1c'...'\x1f':
+            case '\x7f':
+                break;
+            case ' '...'/':
+                ibytes |= c - 0x1f;
+                state = STATE_CSI_PARAM;
+                break;
+            case '0'...'9':
+                pbytes = pbytes * 10 + c - '0';
+                state = STATE_CSI_PARAM;
+                break;
+            case ':'...';':
+                if (keys[size].nparams < sizeof(keys[size].params) / sizeof(*keys[size].params)) {
+                    keys[size].params[keys[size].nparams++] = pbytes;
+                    pbytes = 0;
+                }
+                break;
+            case '@'...'~':
+                if (keys[size].nparams < sizeof(keys[size].params) / sizeof(*keys[size].params)) {
+                    keys[size].params[keys[size].nparams++] = pbytes;
+                    keys[size++].value = 1 << 12 | ibytes << 6  | (c - '@');
+                }
+                state = STATE_GROUND;
+                break;
+            default:
+                state = STATE_GROUND;
+                break;
+            }
+            break;
+        }
+    }
+    return size;
+}
+
+
+
+static int SendModifierKey(int state, uint8_t press_state)
+{
+    int posted = 0;
+
+    if (state & 1) {
+        KdEnqueueKeyboardEvent(sixelKeyboard, 42+8, press_state);
+    }
+    if (state & 2) {
+        KdEnqueueKeyboardEvent(sixelKeyboard, 56+8, press_state);
+    }
+    if (state & 4) {
+        KdEnqueueKeyboardEvent(sixelKeyboard, 29+8, press_state);
+    }
+
+    return posted;
+}
+
+static int GetScancode(int code)
+{
+    static u_char tbl[] = {
+         0,  0,  0,  0,  0,  0,  0,  0, 14, 15, 36,  0,  0, 28,  0,  0, /* 0x00 - 0x0f */
+         0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0, /* 0x10 - 0x1f */
+        57,  2, 40,  4,  5,  6,  8, 40, 10, 11,  9, 13, 51, 12, 52, 53, /* 0x20 - 0x2f */
+        11,  2,  3,  4,  5,  6,  7,  8,  9, 10, 39, 39, 51, 13, 52, 53, /* 0x30 - 0x3f */
+         3, 30, 48, 46, 32, 18, 33, 34, 35, 23, 36, 37, 38, 50, 49, 24, /* 0x40 - 0x4f */
+        25, 16, 19, 31, 20, 22, 47, 17, 45, 21, 44, 26, 43, 27,  7, 12, /* 0x50 - 0x5f */
+        41, 30, 48, 46, 32, 18, 33, 34, 35, 23, 36, 37, 38, 50, 49, 24, /* 0x60 - 0x6f */
+        25, 16, 19, 31, 20, 22, 47, 17, 45, 21, 44, 26, 43, 27, 41, 14, /* 0x70 - 0x7f */
+    };
+
+    if(code <= 0x7f && tbl[code] > 0) {
+        return tbl[code] + 8;
+    } else {
+        return 0;
+    }
+}
+
+
+static int GetState(int code)
+{
+    if (code <= 0x7f) {
+        static u_char tbl[] = {
+            4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 0, 4, 4, /* 0x00 - 0x0f */
+            4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, /* 0x10 - 0x1f */
+            0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, /* 0x20 - 0x2f */
+            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, /* 0x30 - 0x3f */
+            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, /* 0x40 - 0x4f */
+            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, /* 0x50 - 0x5f */
+            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /* 0x60 - 0x6f */
+            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, /* 0x70 - 0x7f */
+        };
+
+        /* Shift */
+        return tbl[code];
+    }
+    return 0;
+}
+
+static int TranslateKey(int value)
+{
+    /* Set the keysym information */
+    int scancode = GetScancode(value);
+
+    if (scancode == 0 && value < 0x20) {
+        /* It seems Ctrl+N key */
+        scancode = GetScancode(value + 0x60);
+    }
+    return scancode;
+}
+
+struct termios orig_termios;
+
+static void tty_raw(void)
+{
+    struct termios raw;
+
+    if (tcgetattr(fileno(stdin), &orig_termios) < 0) {
+        perror("can't set raw mode");
+    }
+    raw = orig_termios;
+    raw.c_iflag &= ~(/*BRKINT |*/ ICRNL /*| INPCK | ISTRIP | IXON*/);
+    raw.c_lflag &= ~(ECHO | ICANON /*| IEXTEN | ISIG*/);
+    raw.c_lflag &= ~(OPOST);
+    raw.c_cc[VMIN] = 0; raw.c_cc[VTIME] = 0;
+    raw.c_cc[VINTR] = 0; raw.c_cc[VKILL] = 0; raw.c_cc[VQUIT] = 0;
+    raw.c_cc[VSTOP] = 0; raw.c_cc[VSUSP] = 0;
+    if (tcsetattr(fileno(stdin), TCSAFLUSH, &raw) < 0) {
+        perror("can't set raw mode");
+    }
+}
+
+static void tty_restore(void)
+{
+    tcsetattr(fileno(stdin), TCSADRAIN, &orig_termios);
+}
+
+static int SIXEL_Flip(SIXEL_Driver *driver)
+{
+    int start_row = 1;
+    int start_col = 1;
+
+#if USE_MUTEX
+    pthread_mutex_lock(&sixel_mutex);
+#endif
+    memcpy(driver->bitmap, driver->buffer, driver->h * driver->w * 3);
+    printf("\033[%d;%dH", start_row, start_col);
+    sixel_encode(driver->bitmap, driver->w, driver->h, 3, driver->dither, driver->output);
+#if USE_MUTEX
+    pthread_mutex_unlock(&sixel_mutex);
+#endif
+
+    return 0;
+}
+
+
+static void SIXEL_UpdateRects(SIXEL_Driver *driver, int numrects, pixman_box16_t *rects)
+{
+    int start_row = 1, start_col = 1;
+    int cell_height = 0, cell_width = 0;
+    int i, y;
+    unsigned char *src, *dst;
+#if SIXEL_VIDEO_DEBUG
+    static int frames = 0;
+    char *format;
+#endif
+    pixman_box16_t box;
+
+    box.x1 = 65535;
+    box.y1 = 65535;
+    box.x2 = 0;
+    box.y2 = 0;
+
+    if (driver->cell_h != 0 && driver->pixel_h != 0) {
+#if USE_MUTEX
+        pthread_mutex_lock(&sixel_mutex);
+#endif
+        for (i = 0; i < numrects; ++i, ++rects) {
+            if (rects->x1 < box.x1) {
+                box.x1 = rects->x1;
+            }
+            if (rects->y1 < box.y1) {
+                box.y1 = rects->y1;
+            }
+            if (rects->x2 > box.x2) {
+                box.x2 = rects->x2;
+            }
+            if (rects->y2 > box.y2) {
+                box.y2 = rects->y2;
+            }
+        }
+        start_row = 1;
+        start_col = 1;
+        cell_height = driver->pixel_h / driver->cell_h;
+        cell_width = driver->pixel_w / driver->cell_w;
+        start_row += box.y1 / cell_height;
+        start_col += box.x1 / cell_width;
+        box.y1 = (start_row - 1) * cell_height;
+        box.x1 = (start_col - 1) * cell_width;
+        box.y2 = min((box.y2 / cell_height + 1) * cell_height, driver->h);
+        box.x2 = min((box.x2 / cell_width + 1) * cell_width, driver->w);
+        if (box.x1 == 0 && box.x2 == driver->w) {
+            dst = driver->bitmap;
+            src = driver->buffer + box.y1 * driver->w * 3;
+            memcpy(dst, src, (box.y2 - box.y1) * driver->w * 3);
+        } else {
+            for (y = box.y1; y < box.y2; ++y) {
+                dst = driver->bitmap + (y - box.y1) * (box.x2 - box.x1) * 3;
+                src = driver->buffer + y * driver->w * 3 + box.x1 * 3;
+                memcpy(dst, src, (box.x2 - box.x1) * 3);
+            }
+        }
+        printf("\033[%d;%dH", start_row, start_col);
+        sixel_encode(driver->bitmap,
+                     (box.x2 - box.x1),
+                     (box.y2 - box.y1),
+                     3,
+                     driver->dither,
+                     driver->output);
+#if SIXEL_VIDEO_DEBUG
+        format = "\033[100;1Hframes: %05d, x: %04d, y: %04d, w: %04d, h: %04d";
+        printf(format, ++frames,
+               box.x1, box.y2,
+               box.x2 - box.x1,
+               box.y2 - box.y1);
+#endif
+#if USE_MUTEX
+        pthread_mutex_unlock(&sixel_mutex);
+#endif
+    } else {
+        SIXEL_Flip(driver);
+    }
+    fflush(stdout);
+}
+
+
+static Bool sixelMapFramebuffer(KdScreenInfo *screen)
+{
+    SIXEL_Driver *driver = screen->driver;
+    KdPointerMatrix m;
+
+    if (driver->randr != RR_Rotate_0)
+        driver->shadow = TRUE;
+    else
+        driver->shadow = FALSE;
+
+    KdComputePointerMatrix (&m, driver->randr, screen->width, screen->height);
+
+    KdSetPointerMatrix (&m);
+
+    screen->width = driver->w;
+    screen->height = driver->h;
+
+    TRACE2("%s: shadow %d\n", __func__, driver->shadow);
+
+    if (driver->shadow)
+    {
+        if (!KdShadowFbAlloc (screen,
+                              driver->randr & (RR_Rotate_90|RR_Rotate_270)))
+            return FALSE;
+    }
+    else
+    {
+        screen->fb.byteStride = driver->pitch;
+        screen->fb.pixelStride = driver->w;
+        screen->fb.frameBuffer = (CARD8 *) (driver->buffer);
+    }
+
+    return TRUE;
+}
+
+static void
+sixelSetScreenSizes(ScreenPtr pScreen)
+{
+    KdScreenPriv(pScreen);
+    KdScreenInfo *screen = pScreenPriv->screen;
+    SIXEL_Driver *driver = screen->driver;
+
+    if (driver->randr & (RR_Rotate_0|RR_Rotate_180))
+    {
+        pScreen->width = driver->w;
+        pScreen->height = driver->h;
+        pScreen->mmWidth = screen->width_mm;
+        pScreen->mmHeight = screen->height_mm;
+    }
+    else
+    {
+        pScreen->width = driver->h;
+        pScreen->height = driver->w;
+        pScreen->mmWidth = screen->height_mm;
+        pScreen->mmHeight = screen->width_mm;
+    }
+}
+
+static Bool
+sixelUnmapFramebuffer(KdScreenInfo *screen)
+{
+    KdShadowFbFree (screen);
+    return TRUE;
+}
+
+static int sixel_write(char *data, int size, void *priv)
+{
+    return fwrite(data, 1, size, (FILE *)priv);
+}
+
+static Bool sixelScreenInit(KdScreenInfo *screen)
+{
+    SIXEL_Driver *driver;
+    struct winsize ws;
+
+    TRACE1("%s\n", __func__);
+
+    if (!screen->width || !screen->height)
+    {
+        screen->width = 640;
+        screen->height = 480;
+    }
+//    if (!screen->fb.depth) {
+        screen->fb.depth = 24;
+//    }
+
+    driver = g_driver = calloc(1, sizeof(SIXEL_Driver));
+
+    TRACE3("Attempting for %dx%d/%dbpp mode\n", screen->width, screen->height, screen->fb.depth);
+
+    driver->output = sixel_output_create(sixel_write, stdout);
+    driver->dither = sixel_dither_get(BUILTIN_XTERM256);
+
+    driver->buffer = calloc(1, 3 * screen->width * screen->height);
+    if (!driver->buffer) {
+        printf("Couldn't allocate buffer for requested mode\n");
+        return FALSE;
+    }
+    driver->bitmap = calloc(1, 3 * screen->width * screen->height);
+    if (!driver->bitmap) {
+        printf("Couldn't allocate buffer for requested mode\n");
+        return FALSE;
+    }
+
+    /* Set up the new mode framebuffer */
+    driver->w = screen->width;
+    driver->h = screen->height;
+    driver->pixel_w = 0;
+    driver->pixel_h = 0;
+    driver->cell_w = 0;
+    driver->cell_h = 0;
+    driver->pitch = screen->width * 3;
+
+    ioctl(STDOUT_FILENO, TIOCGWINSZ, &ws);
+    driver->pixel_w = ws.ws_xpixel;
+    driver->pixel_h = ws.ws_ypixel;
+    driver->cell_w = ws.ws_col;
+    driver->cell_h = ws.ws_row;
+
+    if (driver->cell_w <= 0 || driver->cell_h <= 0) {
+        printf("\033[18t");
+    }
+    if (driver->pixel_w <= 0 || driver->pixel_h <= 0) {
+        printf("\033[14t");
+    }
+
+    driver->randr = screen->randr;
+    screen->driver = driver;
+
+    TRACE3("Set %dx%d/%dbpp mode\n", driver->w, driver->h, screen->fb.depth);
+
+    screen->fb.visuals = (1 << 4);
+    screen->fb.redMask = 0x0000ff;
+    screen->fb.greenMask = 0x00ff00;
+    screen->fb.blueMask = 0xff0000;
+    screen->fb.bitsPerPixel = screen->fb.depth;
+#if 0
+    screen->fb.shadow = FALSE;
+#endif
+    screen->rate = 8;  /* 60 is too intense for CPU */
+
+    printf("\033]1;Freedesktop.org X server on SIXEL\007");
+    return sixelMapFramebuffer(screen);
+}
+
+static void sixelShadowUpdate(ScreenPtr pScreen, shadowBufPtr pBuf)
+{
+    KdScreenPriv(pScreen);
+    KdScreenInfo *screen = pScreenPriv->screen;
+    SIXEL_Driver *driver = screen->driver;
+    pixman_box16_t * rects;
+    int amount, i;
+    int updateRectsPixelCount = 0;
+
+    if (driver->shadow)
+    {
+        shadowUpdatePacked(pScreen, pBuf);
+    }
+
+    rects = pixman_region_rectangles(&pBuf->pDamage->damage, &amount);
+    for (i = 0; i < amount; i++)
+    {
+        updateRectsPixelCount += (pBuf->pDamage->damage.extents.x2 - pBuf->pDamage->damage.extents.x1) *
+                                 (pBuf->pDamage->damage.extents.y2 - pBuf->pDamage->damage.extents.y1);
+    }
+#if 0
+    /*
+     * Each subrect is copied into temp buffer before uploading to OpenGL texture,
+     * so if total area of pixels copied is more than 1/3 of the whole screen area,
+     * there will be performance hit instead of optimization.
+     */
+    if (amount > NUMRECTS || updateRectsPixelCount * 3 > driver->w * driver->h) {
+        SIXEL_Flip(driver);
+    } else {
+        SIXEL_UpdateRects(driver, amount, rects);
+    }
+#else
+    SIXEL_UpdateRects(driver, amount, rects);
+#endif
+}
+
+static void *sixelShadowWindow(ScreenPtr pScreen, CARD32 row, CARD32 offset, int mode, CARD32 *size, void *closure)
+{
+    KdScreenPriv(pScreen);
+    KdScreenInfo *screen = pScreenPriv->screen;
+    SIXEL_Driver *driver = screen->driver;
+
+    if (!pScreenPriv->enabled) {
+        return NULL;
+    }
+
+    *size = driver->pitch;
+
+    TRACE1("%s\n", __func__);
+
+    return (void *)((CARD8 *)driver->buffer + row * (*size) + offset);
+}
+
+
+static Bool sixelCreateRes(ScreenPtr pScreen)
+{
+    KdScreenPriv(pScreen);
+    KdScreenInfo *screen = pScreenPriv->screen;
+    SIXEL_Driver *driver = screen->driver;
+    Bool oldShadow = screen->fb.shadow;
+
+    TRACE1("%s\n", __func__);
+
+    /*
+     * Hack: Kdrive assumes we have dumb videobuffer, which updates automatically,
+     * and does not call update callback if shadow flag is not set.
+     */
+    screen->fb.shadow = TRUE;
+    KdShadowSet(pScreen, driver->randr, sixelShadowUpdate, sixelShadowWindow);
+    screen->fb.shadow = oldShadow;
+
+    return TRUE;
+}
+
+
+#ifdef RANDR
+static Bool sixelRandRGetInfo(ScreenPtr pScreen, Rotation *rotations)
+{
+    KdScreenPriv(pScreen);
+    KdScreenInfo *screen = pScreenPriv->screen;
+    SIXEL_Driver *driver = screen->driver;
+    RRScreenSizePtr pSize;
+    Rotation randr;
+    int n;
+
+    TRACE1("%s", __func__);
+
+    *rotations = RR_Rotate_All|RR_Reflect_All;
+
+    for (n = 0; n < pScreen->numDepths; n++)
+        if (pScreen->allowedDepths[n].numVids)
+            break;
+    if (n == pScreen->numDepths) {
+        return FALSE;
+    }
+
+    pSize = RRRegisterSize(pScreen,
+                           screen->width,
+                           screen->height,
+                           screen->width_mm,
+                           screen->height_mm);
+
+    randr = KdSubRotation(driver->randr, screen->randr);
+
+    RRSetCurrentConfig(pScreen, randr, 0, pSize);
+
+    return TRUE;
+}
+
+static Bool sixelRandRSetConfig(ScreenPtr pScreen,
+                                Rotation randr,
+                                int rate,
+                                RRScreenSizePtr pSize)
+{
+    KdScreenPriv(pScreen);
+    KdScreenInfo *screen = pScreenPriv->screen;
+    SIXEL_Driver *driver = screen->driver;
+    Bool wasEnabled = pScreenPriv->enabled;
+    SIXEL_Driver oldDriver;
+    int oldwidth;
+    int oldheight;
+    int oldmmwidth;
+    int oldmmheight;
+
+    if (wasEnabled) {
+        KdDisableScreen (pScreen);
+    }
+
+    oldDriver = *driver;
+
+    oldwidth = screen->width;
+    oldheight = screen->height;
+    oldmmwidth = pScreen->mmWidth;
+    oldmmheight = pScreen->mmHeight;
+
+    /*
+     * Set new configuration
+     */
+
+    driver->randr = KdAddRotation(screen->randr, randr);
+
+    TRACE2("%s driver->randr %d", __func__, driver->randr);
+
+    sixelUnmapFramebuffer(screen);
+
+    if (!sixelMapFramebuffer(screen)) {
+        goto bail4;
+    }
+
+    KdShadowUnset(screen->pScreen);
+
+    if (!sixelCreateRes(screen->pScreen)) {
+        goto bail4;
+    }
+
+    sixelSetScreenSizes(screen->pScreen);
+
+    /*
+     * Set frame buffer mapping
+     */
+    (*pScreen->ModifyPixmapHeader)(fbGetScreenPixmap(pScreen),
+                                   pScreen->width,
+                                   pScreen->height,
+                                   screen->fb.depth,
+                                   screen->fb.bitsPerPixel,
+                                   screen->fb.byteStride,
+                                   screen->fb.frameBuffer);
+
+    /* set the subpixel order */
+
+    KdSetSubpixelOrder(pScreen, driver->randr);
+    if (wasEnabled) {
+        KdEnableScreen(pScreen);
+    }
+
+    return TRUE;
+
+bail4:
+    sixelUnmapFramebuffer(screen);
+    *driver = oldDriver;
+    (void) sixelMapFramebuffer(screen);
+    pScreen->width = oldwidth;
+    pScreen->height = oldheight;
+    pScreen->mmWidth = oldmmwidth;
+    pScreen->mmHeight = oldmmheight;
+
+    if (wasEnabled) {
+        KdEnableScreen (pScreen);
+    }
+    return FALSE;
+}
+
+static Bool sixelRandRInit(ScreenPtr pScreen)
+{
+    rrScrPrivPtr pScrPriv;
+
+    TRACE1("%s", __func__);
+
+    if (!RRScreenInit(pScreen)) {
+        return FALSE;
+    }
+
+    pScrPriv = rrGetScrPriv(pScreen);
+    pScrPriv->rrGetInfo = sixelRandRGetInfo;
+    pScrPriv->rrSetConfig = sixelRandRSetConfig;
+    return TRUE;
+}
+#endif
+
+
+static Bool sixelFinishInitScreen(ScreenPtr pScreen)
+{
+    if (!shadowSetup(pScreen)) {
+        return FALSE;
+    }
+
+#ifdef RANDR
+    if (!sixelRandRInit(pScreen)) {
+        return FALSE;
+    }
+#endif
+    return TRUE;
+}
+
+static void sixelKeyboardFini(KdKeyboardInfo *ki)
+{
+    TRACE1("sixelKeyboardFini() %p\n", ki);
+    sixelKeyboard = NULL;
+}
+
+static Status sixelKeyboardInit(KdKeyboardInfo *ki)
+{
+    ki->minScanCode = 8;
+    ki->maxScanCode = 255;
+    free(ki->name);
+    free(ki->xkbRules);
+    free(ki->xkbModel);
+    free(ki->xkbLayout);
+    ki->name = strdup("mlterm keyboard");
+    ki->xkbRules = strdup("evdev");
+    ki->xkbModel = strdup("pc105");
+    ki->xkbLayout = strdup("us");
+    sixelKeyboard = ki;
+    TRACE1("sixelKeyboardInit() %p\n", ki);
+    return Success;
+}
+
+static Status sixelKeyboardEnable(KdKeyboardInfo *ki)
+{
+    return Success;
+}
+
+static void sixelKeyboardDisable(KdKeyboardInfo *ki)
+{
+}
+
+static void sixelKeyboardLeds(KdKeyboardInfo *ki, int leds)
+{
+}
+
+static void sixelKeyboardBell(KdKeyboardInfo *ki, int volume, int frequency, int duration)
+{
+}
+
+static Status sixelMouseInit(KdPointerInfo *pi)
+{
+    pi->nButtons = 7;
+    pi->name = strdup("Android touchscreen and stylus");
+    sixelPointer = pi;
+    TRACE1("sixelMouseInit() %p\n", pi);
+    return Success;
+}
+
+static void sixelMouseFini(KdPointerInfo *pi)
+{
+    TRACE1("sixelMouseFini() %p\n", pi);
+    sixelPointer = NULL;
+}
+
+static Status sixelMouseEnable(KdPointerInfo *pi)
+{
+    /* TODO */
+    return Success;
+}
+
+static void sixelMouseDisable(KdPointerInfo *pi)
+{
+    /* TODO */
+    return;
+}
+
+void InitCard(char *name)
+{
+    KdCardInfoAdd(&sixelFuncs,  0);
+    TRACE1("InitCard: %s\n", name);
+}
+
+void InitOutput(ScreenInfo *pScreenInfo, int argc, char **argv)
+{
+    KdInitOutput(pScreenInfo, argc, argv);
+    signal(SIGHUP, SIG_DFL);
+    TRACE("InitOutput()\n");
+}
+
+void InitInput(int argc, char **argv)
+{
+    KdPointerInfo *pi;
+    KdKeyboardInfo *ki;
+
+    KdAddKeyboardDriver(&sixelKeyboardDriver);
+    KdAddPointerDriver(&sixelMouseDriver);
+
+    ki = KdParseKeyboard("keyboard");
+    KdAddKeyboard(ki);
+    pi = KdParsePointer("mouse");
+    KdAddPointer(pi);
+
+    KdInitInput();
+}
+
+#ifdef DDXBEFORERESET
+void ddxBeforeReset(void)
+{
+}
+#endif
+
+void ddxUseMsg(void)
+{
+    KdUseMsg();
+}
+
+int ddxProcessArgument(int argc, char **argv, int i)
+{
+    return KdProcessArgument(argc, argv, i);
+}
+
+static void sixelPollInput(void)
+{
+    int posted = 0;
+    static int prev_x = -1, prev_y = -1;
+    static int mouse_x = -1, mouse_y = -1;
+    static int mouse_button = 0;
+#if SIXEL_DEBUG
+    static int events = 0;
+#endif
+    char buf[4096];
+    static sixel_key_t keys[4096];
+    int scancode;
+    sixel_key_t *key;
+    int nread, nkeys;
+    int i;
+    int state;
+
+    nread = get_input(buf, sizeof(buf));
+    if (nread > 0) {
+        nkeys = getkeys(buf, nread, keys);
+        if (nkeys >= sizeof(keys) / sizeof(*keys)) {
+            nkeys = sizeof(keys) / sizeof(*keys) - 1;
+        }
+        for (i = 0; i < nkeys; ++i) {
+            key = keys + i;
+            switch (key->value) {
+            case SIXEL_DTTERM_SEQS:
+                if (g_driver) {
+                    switch (key->params[0]) {
+                    case 4:
+                        g_driver->pixel_h = key->params[1];
+                        g_driver->pixel_w = key->params[2];
+                        break;
+                    case 8:
+                        g_driver->cell_h = key->params[1];
+                        g_driver->cell_w = key->params[2];
+                        break;
+                    default:
+                        break;
+                    }
+                }
+                break;
+
+            case SIXEL_MOUSE_DEC:
+                if (key->nparams >= 4) {
+                    mouse_y = key->params[2];
+                    mouse_x = key->params[3];
+                    switch (key->params[0]) {
+                    case 1:
+                        break;
+                    case 2:
+                        if (!(mouse_button & 1)) {
+                            mouseState |= KD_BUTTON_1;
+                            mouse_button |= 1;
+                            KdEnqueuePointerEvent(sixelPointer, mouseState|KD_MOUSE_DELTA, 0, 0, 0);
+                        }
+                        break;
+                    case 3:
+                        //if (mouse_button & 1) {
+                            mouseState &= ~KD_BUTTON_1;
+                            mouse_button = 0;
+                            KdEnqueuePointerEvent(sixelPointer, mouseState|KD_MOUSE_DELTA, 0, 0, 1);
+                        //}
+                        break;
+                    case 4:
+                        if (!(mouse_button & 2)) {
+                            mouseState |= KD_BUTTON_2;
+                            mouse_button |= 2;
+                            KdEnqueuePointerEvent(sixelPointer, mouseState|KD_MOUSE_DELTA, 0, 0, 0);
+                        }
+                        break;
+                    case 5:
+                        //if (mouse_button & 2) {
+                            mouseState &= ~KD_BUTTON_2;
+                            mouse_button = 0;
+                            KdEnqueuePointerEvent(sixelPointer, mouseState|KD_MOUSE_DELTA, 0, 0, 1);
+                        //}
+                        break;
+                    case 6:
+                        if (!(mouse_button & 4)) {
+                            mouseState |= KD_BUTTON_3;
+                            mouse_button |= 4;
+                            KdEnqueuePointerEvent(sixelPointer, mouseState|KD_MOUSE_DELTA, 0, 0, 0);
+                        }
+                        break;
+                    case 7:
+                        //if (mouse_button & 4) {
+                            mouseState &= ~KD_BUTTON_3;
+                            mouse_button = 0;
+                            KdEnqueuePointerEvent(sixelPointer, mouseState|KD_MOUSE_DELTA, 0, 0, 1);
+                        //}
+                        break;
+                    case 10:
+                        break;
+                    case 8:
+                    case 9:
+                    case 32:
+                    case 64:
+                    default:
+                        break;
+                    }
+                    mouse_button = key->params[1];
+                }
+#if USE_FILTER_RECTANGLE
+                printf("\033[1;1'z" "\033[3'{" "\033[1'{");
+                printf("\033['w");
+#else
+                printf("\033['|");
+#endif
+                fflush(stdout);
+                break;
+
+            case SIXEL_FKEYS:
+                /* TODO: modifyFunctionKeys */
+                switch (key->params[0]) {
+                case 2:  scancode = 110+8; break;
+                case 3:  scancode = 111+8; break;
+                case 5:  scancode = 104+8; break;
+                case 6:  scancode = 109+8; break;
+                case 7:  scancode = 102+8; break;
+                case 8:  scancode = 107+8; break;
+                case 11: scancode =  59+8; break;
+                case 12: scancode =  60+8; break;
+                case 13: scancode =  61+8; break;
+                case 14: scancode =  62+8; break;
+                case 15: scancode =  63+8; break;
+                case 17: scancode =  64+8; break;
+                case 18: scancode =  65+8; break;
+                case 19: scancode =  66+8; break;
+                case 20: scancode =  67+8; break;
+                case 21: scancode =  68+8; break;
+                case 23: scancode =  87+8; break;
+                case 24: scancode =  88+8; break;
+                default:
+                    scancode = 0;
+                    break;
+                }
+                if (key->nparams == 2) {
+                    key->params[1]--;
+                    SendModifierKey(key->params[1], 0);
+                }
+                KdEnqueueKeyboardEvent(sixelKeyboard, scancode, 0);
+                if (key->nparams == 2) {
+                    SendModifierKey(key->params[1], 1);
+                }
+                KdEnqueueKeyboardEvent(sixelKeyboard, scancode, 1);
+                break;
+            case SIXEL_FOCUSIN:
+                SIXEL_Flip(g_driver);
+                break;
+            case SIXEL_FOCUSOUT:
+                /* TODO: */
+                /* SIXEL_Flip(g_driver); */
+                break;
+            default:
+                if ((key->value >= SIXEL_UP && key->value <= SIXEL_LEFT) ||
+                    (key->value >= SIXEL_END && key->value <= SIXEL_HOME) ||
+                    (key->value >= SIXEL_F1 && key->value <= SIXEL_F4)) {
+                    /* TODO: modifyCursorKeys, modifyOtherKeys */
+                    switch(key->value) {
+                    case SIXEL_UP:    scancode = 103+8; break;
+                    case SIXEL_DOWN:  scancode = 108+8; break;
+                    case SIXEL_RIGHT: scancode = 106+8; break;
+                    case SIXEL_LEFT:  scancode = 105+8; break;
+                    case SIXEL_HOME:  scancode = 102+8; break;
+                    case SIXEL_END:   scancode = 107+8; break;
+                    case SIXEL_F1:    scancode =  59+8; break;
+                    case SIXEL_F2:    scancode =  60+8; break;
+                    case SIXEL_F3:    scancode =  61+8; break;
+                    case SIXEL_F4:    scancode =  62+8; break;
+                    default:
+                        scancode = 0;
+                        break;
+                    }
+                    if (key->nparams >= 1) {
+                        key->params[key->nparams-1]--;
+                        posted += SendModifierKey(key->params[key->nparams-1], 0);
+                    }
+                    KdEnqueueKeyboardEvent(sixelKeyboard, scancode, 0);
+                    if (key->nparams >= 1) {
+                        posted += SendModifierKey(key->params[key->nparams-1], 1);
+                    }
+                    KdEnqueueKeyboardEvent(sixelKeyboard, scancode, 1);
+                }
+                else {
+                    state = GetState(key->value);
+                    scancode = TranslateKey(key->value);
+                    if (state) {
+                        SendModifierKey(state, 0);
+                    }
+                    KdEnqueueKeyboardEvent(sixelKeyboard, scancode, 0);
+                    if (state) {
+                        SendModifierKey(state, 1);
+                    }
+                    KdEnqueueKeyboardEvent(sixelKeyboard, scancode, 1);
+                    if (key->value == 0x0c) {
+                        SIXEL_Flip(g_driver);
+                    }
+                }
+                break;
+            }
+        }
+    }
+    if (prev_x != mouse_x || prev_y != mouse_y) {
+        KdEnqueuePointerEvent(sixelPointer, mouseState, mouse_x, mouse_y, 0);
+        prev_x = mouse_x;
+        prev_y = mouse_y;
+    }
+}
+
+static int sixelInit(void)
+{
+    tty_raw();
+    printf("\033[H");
+    printf("\033[?1004h");
+    printf("\033[?25l");
+    printf("\033[>2p");
+#if USE_DECMOUSE
+    printf("\033[1;1'z" "\033[3'{" "\033[1'{");
+#if USE_FILTER_RECTANGLE
+    printf("\033['w");
+#else
+    printf("\033['|");
+#endif
+
+#else
+    printf("\033[?1003h");
+    printf("\033[?1006h");
+#endif
+
+    return 0;
+}
+
+
+static void sixelFini(void)
+{
+    fd_set fdset;
+    struct timeval timeout;
+    char buf[4096];
+
+    printf("\033\\");
+    fflush(stdout);
+#if USE_DECMOUSE
+    printf("\033[0'z" "\033[2'{" "\033[4'{");
+#else
+    printf("\033[?1006l");
+    printf("\033[?1003l");
+#endif
+    printf("\033[>0p");
+    printf("\033[?25h");
+    printf("\033[?1004l");
+
+    FD_ZERO(&fdset);
+    FD_SET(STDIN_FILENO, &fdset);
+    timeout.tv_sec = 0;
+    timeout.tv_usec = 10000;
+
+    if (select(STDIN_FILENO + 1, &fdset, NULL, NULL, &timeout) == 1) {
+        while (read(STDIN_FILENO, buf, sizeof(buf))) {
+            ;
+        }
+    }
+    tty_restore();
+
+    if (g_driver) {
+        sixel_dither_unref(g_driver->dither);
+        sixel_output_unref(g_driver->output);
+        free(g_driver);
+    }
+}
+
+static void
+sixelBell(int volume, int pitch, int duration)
+{
+    if (volume && pitch)
+        printf("\007");
+}
+
+void CloseInput(void)
+{
+    KdCloseInput();
+}
+
+KdOsFuncs sixelOsFuncs = {
+    .Init = sixelInit,
+    .Fini = sixelFini,
+    .pollEvents = sixelPollInput,
+    .Bell = sixelBell,
+};
+
+void OsVendorInit (void)
+{
+    KdOsInit (&sixelOsFuncs);
+}
+
